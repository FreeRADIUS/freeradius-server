FROM ubuntu:16.04

ARG gccver=4.9
ARG clangver=5.0
ARG osname=xenial

ARG DEBIAN_FRONTEND=noninteractive

#
#  Install add-apt-repository
#
RUN apt-get update && \
    apt-get install -y software-properties-common python-software-properties && \
    apt-get clean && \
    rm -r /var/lib/apt/lists/*

#  Requires GCC-4.9 as it has support for C11 keywords and atomics

#  For clang
RUN add-apt-repository -y "deb http://apt.llvm.org/${osname}/ llvm-toolchain-${osname}-${clangver} main" && \
    apt-key adv --fetch-keys http://apt.llvm.org/llvm-snapshot.gpg.key && \
#  For GCC
    add-apt-repository -y ppa:ubuntu-toolchain-r/test

RUN apt-get update && \
#  Development utilities
    apt-get install -y devscripts equivs git quilt rsync && \
#  Compilers
    apt-get install -y g++-${gccver} llvm-${clangver} clang-${clangver} lldb-${clangver} && \
#  eapol_test dependencies
    apt-get install -y libnl-3-dev libnl-genl-3-dev

#
#  Documentation build dependecies
#

#  - doxygen & JSON.pm
RUN apt-get install -y doxygen graphviz libjson-perl
#  - antora (npm needed)
RUN curl -sL https://deb.nodesource.com/setup_8.x | bash -
RUN apt-get install -y nodejs
RUN npm i -g @antora/cli@2.1 @antora/site-generator-default@2.1
#  - pandoc
WORKDIR /tmp
RUN curl -OL $(curl -s https://api.github.com/repos/jgm/pandoc/releases/latest | grep "browser_download_url.*deb" | cut -d '"' -f 4)
RUN apt-get install -y ./pandoc-*.deb
#  - asciidoctor
RUN apt-get install -y ruby-dev
RUN gem install asciidoctor

# set default things
RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${gccver} 50 \
                        --slave /usr/bin/g++ g++ /usr/bin/g++-${gccver} && \
    update-alternatives --config gcc

RUN update-alternatives --install /usr/bin/clang clang /usr/bin/clang-${clangver} 60 && \
    update-alternatives --config clang

RUN update-alternatives --install /usr/bin/lldb lldb /usr/bin/lldb-${clangver} 60 && \
    update-alternatives --config lldb


#
#  Setup a src dir in /usr/local
#
RUN mkdir -p /usr/local/src/repositories
WORKDIR /usr/local/src/repositories


#
#  Shallow clone the FreeRADIUS source
#
WORKDIR /usr/local/src/repositories
ARG source=https://github.com/FreeRADIUS/freeradius-server.git
RUN git clone --depth 1 --no-single-branch ${source}

#
#  Install build dependencies for all branches from v3 onwards
#
WORKDIR freeradius-server
RUN for i in $(git for-each-ref --format='%(refname:short)' refs/remotes/origin 2>/dev/null | sed -e 's#origin/##' | egrep "^(v[3-9]*\.[0-9x]*\.x|master)$");\
	do \
		git checkout $i; \
		if [ -e ./debian/control.in ] ; then debian/rules debian/control ; fi ; echo 'y' | mk-build-deps -irt'apt-get -yV' debian/control ; \
	done
