#
#  To use the json_encode xlats in the schemas below, you must first enable the
#  json module, and may probably want to set json.encode.output_mode = object_simple
#

authorize {

	key = "%{User-Name}"
	message = "%{json_encode:&request:[*]}"

}

post-auth {

	key = "%{User-Name}"

	reference = "messages.%{%{reply:Packet-Type}:-default}"

	messages {
		Access-Accept = "%{json_encode:&User-Name &reply:[*]}"
		Access-Reject = "%{json_encode:&User-Name &reply:[*]}"
		Access-Challenge = ""

		default = "Unknown packet type %{Packet-Type}"
	}

}

accounting {

	key = "%{Acct-Unique-Session-Id}"

	reference = "messages.%{%{Acct-Status-Type}:-default}"

	messages {
		Start = "%{json_encode:&request:[*]}"
		Stop = "%{json_encode:&request:[*]}"
		Alive = "%{json_encode:&request:[*]}"

		Accounting-On = "%{json_encode:&request:[*]}"
		Accounting-Off = "%{json_encode:&request:[*]}"

		default = "Unknown Acct-Status-Type: %{Acct-Status-Type}"
	}

}
