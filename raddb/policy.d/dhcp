#  Assign compatibility data to request for sqlippool
dhcp_sqlippool.post-auth {


	#  Do some minor hacks to the request so that it looks
	#  like a RADIUS request to the SQL IP Pool module.
	update request {
		&User-Name = "DHCP-%{DHCP-Client-Hardware-Address}"

		#
		#  RFC 2132 allows the DHCP client to supply a unique
		#  identifier ("uid") using Option 61 (DHCP-Client-Identifier)
		#  in which case it must be used as the lookup key for
		#  configuration data.
		#
		&Calling-Station-Id = "%{%{DHCP-Client-Identifier}:-%{DHCP-Client-Hardware-Address}}"

		#
		#  The "uid" is generated by the OS which means that clients
		#  whose BMC piggybacks on the main interface (sharing its MAC,
		#  but generating a distinct uid) and dual-booting clients can
		#  be allocated multiple IPs, consuming more pool entries. To
		#  avoid this you can ignore the RFCs and key the configuration
		#  data based only on the client MAC address.
		#
		#  &Calling-Station-Id = "%{DHCP-Client-Hardware-Address}"

		&NAS-IP-Address = "%{%{DHCP-Gateway-IP-Address}:-127.0.0.1}"
		&Acct-Status-Type = Start
	}

	#  Call the actual module
	dhcp_sqlippool

}


#  Assign compatibility data to request for sqlippool for DHCP Release
dhcp_sqlippool_release {


	#  Do some minor hacks to the request so that it looks
	#  like a RADIUS Accounting Stop request to the SQL IP Pool module.
	update request {
		&User-Name = "DHCP-%{DHCP-Client-Hardware-Address}"
		&Calling-Station-Id = "%{%{DHCP-Client-Identifier}:-%{DHCP-Client-Hardware-Address}}"
		&NAS-IP-Address = "%{%{DHCP-Gateway-IP-Address}:-127.0.0.1}"
		&Framed-IP-Address = "%{DHCP-Client-IP-Address}"
		&Acct-Status-Type = Stop
	}

	#  Call the actual module in accounting context
	dhcp_sqlippool.accounting

}

