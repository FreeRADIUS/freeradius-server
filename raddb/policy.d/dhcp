#  Assign common DHCP reply packet options
dhcp_common {
	#  The contents here are invented.  Change them!
	update reply {
		&DHCP-Domain-Name-Server = 127.0.0.1
		&DHCP-Domain-Name-Server = 127.0.0.2
		&DHCP-Subnet-Mask = 255.255.255.0
		&DHCP-Router-Address = 192.0.2.1
		&DHCP-IP-Address-Lease-Time = 7200
		&DHCP-DHCP-Server-Identifier = &control:DHCP-DHCP-Server-Identifier
	}
}

#  Lookup DHCP group based options.  This policy allows  for membership
#  of multiple groups so can cover the ISC concepts of "group" and "class"
#  To use this enable the "dhcp_files" module
#dhcp_group_options {
#	foreach &control:DHCP-Group-Name {
#		dhcp_set_group_options
#	}
#}

#  Policy to override DHCP-Network-IP-Address
#
#  Some network configurations have "shared-networks" in which multiple IP
#  subnets may co-exist in a single Layer 2 network (or VLAN).  This may be
#  due to discontinuous extension of the original address plan or it may be
#  to provide loose segregation between classes of devices such as local
#  network atached storage or IP telephony.
#
#  By default DHCP-Network-IP-Address is populated such that it normally
#  refers to the Layer 2 network from which the DHCP query originates - it
#  cannot know the intended subnet for the device without policy input.
#  Override DHCP-Network-IP-Address to be an address within the desired
#  subnet to force selection of particular network parameters including
#  the address pool
#dhcp_override_network {
#	if (&DHCP-Vendor-Class-Identifier && &DHCP-Vendor-Class-Identifier == "SIP100")
#		update request {
#			DHCP-Network-IP-Address := 10.10.0.0
#		}
#	}
#}

#  Assign compatibility data to request for sqlippool for DHCP Request
dhcp_sqlippool_request {

	#
	#  During initial address selection (DORA) the REQUEST is broadcast and
	#  requested-ip must be provided. We revoke any active offers for addresses
	#  not matching the requested-ip, i.e. those made by other servers when
	#  processing the DISCOVER.
	#
	#  If there is only a single server then this optimisation can be disabled.
	#
	if (&DHCP-Requested-IP-Address) {
		update request {
			&Acct-Status-Type := Start
		}
		dhcp_sqlippool.accounting
	}

	#  Extend an existing offer or active lease
	update request {
		&Acct-Status-Type := Alive
	}
	dhcp_sqlippool.accounting {
		notfound = return
	}

	update reply {
		&DHCP-Your-IP-Address := "%{%{DHCP-Requested-IP-Address}:-%{DHCP-Client-IP-Address}}"
	}

}

#  Assign compatibility data to request for sqlippool for DHCP Release
dhcp_sqlippool_release {

	#  Do some minor hacks to the request so that it looks
	#  like a RADIUS Accounting Stop request to the SQL IP Pool module.
	update request {
		&Acct-Status-Type = Stop
	}

	#  Call the actual module in accounting context
	dhcp_sqlippool.accounting

}

#  Assign compatibility data to request for sqlippool for DHCP Decline
dhcp_sqlippool_decline {

	#  Do a minor hack to the request so that it looks
	#  like a RADIUS Accounting Off request to the SQL IP Pool module.
	update request {
		&Acct-Status-Type = Accounting-Off
	}

	#  Call the actual module in accounting context
	dhcp_sqlippool.accounting

}

