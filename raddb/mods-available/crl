#  -*- text -*-
#
#
#  $Id$

#######################################################################
#
#  = CRL Module
#
#  The `crl` module provides CRL checking of TLS certificates.
#
#  Its primary use case is within the `verify certificate` processing
#  section of the `tls-session` virtual server when verifying client
#  certificates during EAP-TLS.
#

#
#  ## Configuration Settings
#
crl {
	#
	#  source:: Where CRLs will be loaded from
	#
	source {
		#
		#  dynamic:: Expansions for CRLs loaded dynamically from URIs in certificates
		#
		#  The CRL distribution point URI will be in the
		#  attribute `CRL.CDP-URL` when this expansion is performed.
		#
		dynamic {
			#
			#  http:: Expansion to use when URI scheme is http
			#
			#  The `rest` module must be enabled to support this
			#
			http = %rest('GET', "%uri.safe(%{CRL.CDP-URL})")

			#
			#  ldap:: Expansion to use when URI scheme is ldap
			#
			#  If any CRLs need to be retrieved by LDAP queries
			#  then configure and enable the `ldap` module to
			#  support this.
#			ldap = %ldap(%ldap.uri.safe("%{CRL.CDP-URL}"))
		}
	}

	#
	#  force_expiry:: Maximum time between expiring CRLs
	#
	#  If the `nextUpdate` attribute of a CRL is closer than this interval
	#  then that will be used as the point that the CRL is expired.
	#
#	force_expiry = 7d

	#
	#  early_refresh:: Time before `nextUpdate` which the CRL will be refreshed
	#
	early_refresh = 1h
}
