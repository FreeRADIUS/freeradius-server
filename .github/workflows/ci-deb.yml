name: CI DEB

on:
  push:
    branches:
      - packaging_test
  schedule:
    - cron: '0 20 * * *'

env:
  DEBIAN_FRONTEND: noninteractive

jobs:
  deb-build:

    strategy:
      matrix:
        env:
          - { NAME: "ubuntu-16.04", OS: "ubuntu:16.04" }
          - { NAME: "ubuntu-18.04", OS: "ubuntu:18.04" }
          - { NAME: "ubuntu-20.04", OS: "ubuntu:20.04" }
          - { NAME: "debian-9",     OS: "debian:stretch" }
          - { NAME: "debian-10",    OS: "debian:buster" }
          - { NAME: "debian-sid",   OS: "debian:sid" }
      fail-fast: false

    runs-on: ubuntu-latest

    container:
      image: ${{ matrix.env.OS }}

    name: "DEB build"

    steps:

    - name: Package manager performance improvements
      run: |
        echo force-unsafe-io > /etc/dpkg/dpkg.cfg.d/02speedup
        echo 'man-db man-db/auto-update boolean false' | debconf-set-selections

    - name: Install recent git
      run: |
        apt-get update
        apt-get install -y --no-install-recommends git-core ca-certificates

    - uses: actions/checkout@v2
      with:
        repository: mheily/libkqueue
        path: libkqueue

    - name: Install build tools
      run: |
        apt-get install -y --no-install-recommends cmake make gcc libc6-dev equivs file curl

    - name: Build libkqueue
      run: |
        curl -f -o cmake.sh https://cmake.org/files/v3.8/cmake-3.8.2-Linux-x86_64.sh
        [ "$(cat cmake.sh | openssl sha256 | sed 's/^.* //')" = "bb26b1871f9e5c2fb73476186cc94d03b674608f704b48b94d617340b87b4d73" ]
        sh cmake.sh --skip-license --prefix=/usr/local
        cmake -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_LIBDIR=lib ./
        make
        cpack -G DEB
        dpkg -i --force-all ./libkqueue*.deb
      working-directory: libkqueue

    - uses: actions/checkout@v2
      with:
        path: freeradius

    - name: Install build dependencies
      run: |
        apt-get install -y --no-install-recommends build-essential devscripts quilt
        debian/rules debian/control
        mk-build-deps -irt"apt-get -y" debian/control
      working-directory: freeradius

    - name: Build DEBs
      run: |
        make deb
      working-directory: freeradius

    - name: Collect DEBs
      run: |
        mkdir debs
        mv libkqueue/*.deb debs
        mv *.deb debs

    - name: Store DEBs
      uses: actions/upload-artifact@v2
      with:
        name: debs-${{ matrix.env.NAME }}
        path: debs

  deb-test:

    needs:
      - deb-build

    strategy:
      matrix:
        env:
          - { NAME: "ubuntu-16.04", OS: "ubuntu:16.04" }
          - { NAME: "ubuntu-18.04", OS: "ubuntu:18.04" }
          - { NAME: "ubuntu-20.04", OS: "ubuntu:20.04" }
          - { NAME: "debian-9", OS: "debian:stretch" }
          - { NAME: "debian-10", OS: "debian:buster" }
          - { NAME: "debian-sid", OS: "debian:sid" }
      fail-fast: false

    runs-on: ubuntu-latest

    container:
      image: ${{ matrix.env.OS }}

    name: "DEB install test"

    steps:

    - name: Load DEBs
      uses: actions/download-artifact@v2
      with:
        name: debs-${{ matrix.env.NAME }}

    - name: Package manager performance improvements
      run: |
        echo force-unsafe-io > /etc/dpkg/dpkg.cfg.d/02speedup
        echo 'man-db man-db/auto-update boolean false' | debconf-set-selections

    - name: Install DEBs
      run: |
        apt-get update
        find . -maxdepth 1 -name '*.deb' | xargs apt-get install -y --no-install-recommends

    - name: Startup test
      run: |
        freeradius -XC

