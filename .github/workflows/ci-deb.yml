name: CI DEB

on:
  push:
  schedule:
    - cron: '0 20 * * *'

env:
  DEBIAN_FRONTEND: noninteractive

jobs:

  #
  #  We don't want to consume many workers on each push so we only build the
  #  full suite of distros during the scheduled or ci-debug run and just the
  #  "bleeding-edge" distro on each push.
  #
  #  This job builds the matrix based on the event that trigger this run which
  #  the next job consumes.
  #
  set-matrix:
    name: Setup build matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - id: set-matrix
      name: Setup the matrix
      run: |
        if [ "$GITHUB_EVENT_NAME" = "schedule" -o "$GITHUB_REF" = "refs/heads/ci-debug" ]; then
          M=$(cat <<EOF
          {
            "env": [
              { "NAME": "ubuntu-16.04", "OS": "ubuntu:16.04"   },
              { "NAME": "ubuntu-18.04", "OS": "ubuntu:18.04"   },
              { "NAME": "ubuntu-20.04", "OS": "ubuntu:20.04"   },
              { "NAME": "debian-9",     "OS": "debian:stretch" },
              { "NAME": "debian-10",    "OS": "debian:buster"  },
              { "NAME": "debian-sid",   "OS": "debian:sid"     }
            ]
          }
        EOF
          )
        else
          M=$(cat <<EOF
          {
            "env": [
              { "NAME": "debian-sid",   "OS": "debian:sid"     }
            ]
          }
        EOF
          )
        fi
        echo ::set-output name=matrix::$M


  deb-build:

    needs:
      - set-matrix

    strategy:
      matrix: ${{ fromJson(needs.set-matrix.outputs.matrix) }}
      fail-fast: false

    runs-on: ubuntu-latest

    container:
      image: ${{ matrix.env.OS }}

    env:
      HOSTAPD_BUILD_DIR: /tmp/eapol_test.ci
      HOSTAPD_GIT_TAG: hostap_2_8
      CMAKE_SH_PATH: /tmp/cmake
      CMAKE_SH_FILE: cmake-3.8.2-Linux-x86_64.sh
      CMAKE_SH_URL: "https://cmake.org/files/v3.8/cmake-3.8.2-Linux-x86_64.sh"
      CMAKE_SH_SHA: bb26b1871f9e5c2fb73476186cc94d03b674608f704b48b94d617340b87b4d73

    name: "DEB build"

    steps:

    - name: Package manager performance improvements
      run: |
        sed -i 's/deb.debian.org/debian-archive.trafficmanager.net/' /etc/apt/sources.list
        sed -i 's/archive.ubuntu.com/azure.archive.ubuntu.com/' /etc/apt/sources.list
        echo force-unsafe-io > /etc/dpkg/dpkg.cfg.d/02speedup
        echo 'man-db man-db/auto-update boolean false' | debconf-set-selections
        apt-get update

    #
    #  Required so that the checkout action uses git protocol rather than the GitHub REST API.
    #  make rpm requires the FR directory to be a git repository.
    #
    - name: Install recent git
      run: |
        apt-get install -y --no-install-recommends git-core ca-certificates

    - uses: actions/checkout@v2
      with:
        repository: mheily/libkqueue
        path: libkqueue

    - name: Install build tools
      run: |
        apt-get install -y --no-install-recommends make gcc libc6-dev equivs file curl

    - name: Restore cmake download from cache
      uses: actions/cache@v2
      id: cmake-cache
      with:
        path: ${{ env.CMAKE_SH_PATH }}
        key: ${{ env.CMAKE_SH_FILE }}-v1

    - name: Download and install cmake
      run: |
        mkdir -p "$CMAKE_SH_PATH"
        [ -e "$CMAKE_SH_PATH/$CMAKE_SH_FILE" ] || curl -f -o "$CMAKE_SH_PATH/$CMAKE_SH_FILE" "$CMAKE_SH_URL"
        [ "$(cat $CMAKE_SH_PATH/$CMAKE_SH_FILE | openssl sha256 | sed 's/^.* //')" = "$CMAKE_SH_SHA" ]
        sh "$CMAKE_SH_PATH/$CMAKE_SH_FILE" --skip-license --prefix=/usr/local

    - name: Build libkqueue
      run: |
        cmake -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_LIBDIR=lib ./
        make
        cpack -G DEB
        dpkg -i --force-all ./libkqueue*.deb
      working-directory: libkqueue

    - uses: actions/checkout@v2
      with:
        path: freeradius

    - name: Install build dependencies
      run: |
        apt-get install -y --no-install-recommends build-essential devscripts quilt
        debian/rules debian/control
        mk-build-deps -irt"apt-get -y" debian/control
      working-directory: freeradius

    - name: Build DEBs
      run: |
        make deb
      working-directory: freeradius

    - name: Collect DEBs
      run: |
        mkdir debs
        mv libkqueue/*.deb debs
        mv *.deb debs

    - name: Restore eapol_test build directory from cache
      uses: actions/cache@v2
      id: hostapd-cache
      with:
        path: ${{ env.HOSTAPD_BUILD_DIR }}
        key: hostapd-${{ matrix.env.NAME }}-${{ env.HOSTAPD_GIT_TAG }}-v1

    # Build eapol_test using a minimal make environment to avoid configuring
    - name: Build eapol_test
      run: |
        apt-get install -y libnl-3-dev libnl-genl-3-dev
        echo "top_srcdir:=$(pwd)" > Make.inc
        echo "BUILD_DIR:=build" >> Make.inc
        make -j `nproc` eapol_test
        mv scripts/ci/eapol_test/eapol_test ../debs
      working-directory: freeradius

    - name: Store DEBs
      uses: actions/upload-artifact@v2
      with:
        name: debs-${{ matrix.env.NAME }}
        path: debs
        retention-days: 1

    #
    #  If the CI has failed and the branch is ci-debug then start a tmate
    #  session. SSH rendezvous point is emited continuously in the job output.
    #
    - name: "Debug: Package dependancies for tmate"
      run: |
        apt-get install -y --no-install-recommends xz-utils
      if: ${{ github.ref == 'refs/heads/ci-debug' && failure() }}

    - name: "Debug: Start tmate"
      uses: mxschmitt/action-tmate@v3
      with:
        limit-access-to-actor: true
        sudo: false
      if: ${{ github.ref == 'refs/heads/ci-debug' && failure() }}


  #
  #  Perform "post-install" testing of the FR packages that we have just built
  #  in a clean environment consisting of only the base OS and package
  #  dependancies
  #
  deb-test:

    needs:
      - set-matrix
      - deb-build

    strategy:
      matrix: ${{ fromJson(needs.set-matrix.outputs.matrix) }}
      fail-fast: false

    runs-on: ubuntu-latest

    container:
      image: ${{ matrix.env.OS }}

    name: "DEB install test"

    steps:

    - name: Load DEBs
      uses: actions/download-artifact@v2
      with:
        name: debs-${{ matrix.env.NAME }}

    - name: Package manager performance improvements
      run: |
        sed -i 's/deb.debian.org/debian-archive.trafficmanager.net/' /etc/apt/sources.list
        sed -i 's/archive.ubuntu.com/azure.archive.ubuntu.com/' /etc/apt/sources.list
        echo force-unsafe-io > /etc/dpkg/dpkg.cfg.d/02speedup
        echo 'man-db man-db/auto-update boolean false' | debconf-set-selections
        apt-get update

    # For pkill
    - name: Install procps
      run: |
        apt-get install -y --no-install-recommends procps

    - name: Install DEBs
      run: |
        find . -maxdepth 1 -name '*.deb' | xargs apt-get install -y --no-install-recommends

    - name: Config test
      run: |
        freeradius -XC

    #
    #  We now perform some post-install tests that depend on the availability
    #  of the source tree
    #
    - name: Install pre-built eapol_test
      run: |
        apt-get install -y libssl1.? libdbus-1-? libnl-3-200 libnl-genl-3-200
        mv eapol_test /usr/local/bin
        chmod +x /usr/local/bin/eapol_test

    - uses: actions/checkout@v2
      with:
        path: freeradius

    - name: Run the post-install test target
      run: |
        make -C raddb/certs
        touch Make.inc
        mkdir -p build/tests/eapol_test
        echo "EAPOL_TEST=" $(which eapol_test) > build/tests/eapol_test/eapol_test.mk
        make -f scripts/ci/package-test.mk package-test
      working-directory: freeradius

    - name: Upload radius logs on failure
      if: ${{ failure() }}
      uses: actions/upload-artifact@v2
      with:
        name: radius-logs-${{ matrix.env.NAME }}
        path: |
          /var/log/freeradius
          freeradius/build/tests/eapol_test
        retention-days: 30

    #
    #  See above comments for tmate
    #
    - name: "Debug: Package dependancies for tmate"
      run: |
        apt-get install -y --no-install-recommends xz-utils
      if: ${{ github.ref == 'refs/heads/ci-debug' && failure() }}

    - name: "Debug: Start tmate"
      uses: mxschmitt/action-tmate@v3
      with:
        limit-access-to-actor: true
        sudo: false
      if: ${{ github.ref == 'refs/heads/ci-debug' && failure() }}
