#
#  Test vectors for DHCP attributes
#
load dhcpv6

#
#  Simple octets type
#
encode-pair DHCPv6-Client-ID = 0x010203040506070809
data 00 01 00 09 01 02 03 04 05 06 07 08 09

encode-pair DHCPv6-Client-ID = 0x010101010101010101, DHCPv6-Server-ID = 0x02020202020202020202
data 00 01 00 09 01 01 01 01 01 01 01 01 01 00 02 00 0a 02 02 02 02 02 02 02 02 02 02

# Zero length octets
encode-pair DHCPv6-Client-ID = 0x
data 00 01 00 00

#
#  Simple string type
#
encode-pair DHCPv6-Subscriber-ID = "fred"
data 00 26 00 04 66 72 65 64

encode-pair DHCPv6-Subscriber-ID = "bob", DHCPv6-New-Posix-Timezone = "GB"
data 00 26 00 03 62 6f 62 00 29 00 02 47 42

# Zero length string
encode-pair DHCPv6-Subscriber-ID = ""
data 00 26 00 00

#
#  Bool
#
encode-pair DHCPv6-Rapid-Commit = yes
data 00 0e 00 00

encode-pair DHCPv6-Rapid-Commit = no
data

#
#  1 byte unsigned integer (uint8)
#
encode-pair DHCPv6-Preference = 255
data 00 07 00 01 ff

encode-pair DHCPv6-Preference = 0
data 00 07 00 01 00

#
#  2 byte unsigned integer (uint16)
#
encode-pair DHCPv6-ANI-Access-Technology-Type = 3GPP2-NB-IOT
data 00 69 00 02 00 0d

#
#  4 byte unsigned integer (uint32)
#
encode-pair DHCPv6-Information-Refresh-Time = 99
data 00 20 00 04 00 00 00 63

#
#  Date. Like a 32bit unix timestamp but starts from 1st Jan 2000 instead of 1st Jan 1970
#
encode-pair DHCPv6-Failover-Expiration-Time = 0
data 00 78 00 04 00 00 00 00

# Still less than 946080000 (30 years), so still 0 (we can't represent dates earlier than 1st Jan 2000)
encode-pair DHCPv6-Failover-Expiration-Time = 500
data 00 78 00 04 00 00 00 00

encode-pair DHCPv6-Failover-Expiration-Time = 946080000
data 00 78 00 04 00 00 00 00

# 1st second of 1st Jan 2000
encode-pair DHCPv6-Failover-Expiration-Time = 946080001
data 00 78 00 04 00 00 00 01

#
#  Encode ipv6address
#
encode-pair DHCPv6-Unicast = 2001:0db8:85a3:0000:0000:8a2e:0370:7334
data 00 0c 00 10 20 01 0d b8 85 a3 00 00 00 00 8a 2e 03 70 73 34

# Scope should be ignored.  We use %0 as numbered scopes work everywhere, interfaces don't
encode-pair DHCPv6-Unicast = 2001:0db8:85a3:0000:0000:8a2e:0370:7334%0
data 00 0c 00 10 20 01 0d b8 85 a3 00 00 00 00 8a 2e 03 70 73 34

#
#  Encode ipv6prefix
#
encode-pair DHCPv6-MIP6-Home-Net-Prefix = 2001:db8::/32
data 00 47 00 05 20 20 01 0d b8

# Prefix truncates address portion
encode-pair DHCPv6-MIP6-Home-Net-Prefix = 2001:db8:00ff::/32
data 00 47 00 05 20 20 01 0d b8

# Prefix longer than address portion
encode-pair DHCPv6-MIP6-Home-Net-Prefix = 2001:db8:00ff::/64
data 00 47 00 09 40 20 01 0d b8 00 ff 00 00

encode-pair DHCPv6-MIP6-Home-Net-Prefix = 2001:0db8:85a3:0000:0000:8a2e:0370:7334/128
data 00 47 00 11 80 20 01 0d b8 85 a3 00 00 00 00 8a 2e 03 70 73 34

# Cast ipv6addr to 128bit prefix
encode-pair DHCPv6-MIP6-Home-Net-Prefix = 2001:0db8:85a3:0000:0000:8a2e:0370:7334
data 00 47 00 11 80 20 01 0d b8 85 a3 00 00 00 00 8a 2e 03 70 73 34

# 0 bit prefix
encode-pair DHCPv6-MIP6-Home-Net-Prefix = ::/0
data 00 47 00 01 00

# v4 address - Check the correct 4in6 prefix is added
encode-pair DHCPv6-MIP6-Home-Net-Prefix = ::ffff:192.168.0.1
data 00 47 00 11 80 00 00 00 00 00 00 00 00 00 00 ff ff c0 a8 00 01

#
#  Array of 16bit integers
#
encode-pair DHCPv6-Client-Arch-Type = x86-BIOS, DHCPv6-Client-Arch-Type = ARM-64-Uboot
data 00 3d 00 04 00 00 00 16

#
#  Two different arrays of 16bit integers
#
encode-pair DHCPv6-Client-Arch-Type = x86-BIOS, DHCPv6-Client-Arch-Type = ARM-64-Uboot, DHCPv6-S46-Priority = DS-Lite, DHCPv6-S46-Priority = MAP-E
data 00 3d 00 04 00 00 00 16 00 6f 00 04 00 40 00 5e

#
#  Array type with one element
#
encode-pair DHCPv6-Client-Arch-Type = x86-BIOS
data 00 3d 00 02 00 00

#
#  Array of IPv6 addresses
#
encode-pair DHCPv6-SIP-Server-Address = 2001:0db8:85a3:0000:0000:8a2e:0370:7334, DHCPv6-SIP-Server-Address = 2001:0db8:85a3:0000:0000:8a2e:0370:7335
data 00 16 00 20 20 01 0d b8 85 a3 00 00 00 00 8a 2e 03 70 73 34 20 01 0d b8 85 a3 00 00 00 00 8a 2e 03 70 73 35

#
#  Array of strings, each substring should have a 16bit length field containing its length
#
encode-pair DHCPv6-Bootfile-Param = "I LIKE CHICKEN",  DHCPv6-Bootfile-Param = "I LIKE LIVER"
data 00 3c 00 1e 00 0e 49 20 4c 49 4b 45 20 43 48 49 43 4b 45 4e 00 0c 49 20 4c 49 4b 45 20 4c 49 56 45 52

# Still needs to add the length field with only one element
encode-pair DHCPv6-Bootfile-Param = "MEOW MIX MEOW MIX"
data 00 3c 00 13 00 11 4d 45 4f 57 20 4d 49 58 20 4d 45 4f 57 20 4d 49 58

encode-pair DHCPv6-Bootfile-Param = ""
data 00 3c 00 02 00 00

encode-pair DHCPv6-Bootfile-Param = "",  DHCPv6-Bootfile-Param = "foo"
data 00 3c 00 07 00 00 00 03 66 6f 6f

#
#  Variable length octets array
#
encode-pair DHCPv6-User-Class = 0x010203, DHCPv6-User-Class = 0x02040810
data 00 0f 00 0b 00 03 01 02 03 00 04 02 04 08 10

encode-pair DHCPv6-User-Class = 0x010203
data 00 0f 00 05 00 03 01 02 03

encode-pair DHCPv6-User-Class = 0x, DHCPv6-User-Class = 0x
data 00 0f 00 04 00 00 00 00

#
#  TLV with array type values
#
encode-pair DHCPv6-MOS-Address-IS = 2001:0db8:85a3:0000:0000:8a2e:0370:7334
data 00 36 00 14 00 01 00 10 20 01 0d b8 85 a3 00 00 00 00 8a 2e 03 70 73 34

encode-pair DHCPv6-MOS-Address-IS = 2001:0db8:85a3:0000:0000:8a2e:0370:7334, DHCPv6-MOS-Address-IS = 2001:0db8:85a3:0000:0000:8a2e:0370:7335
data 00 36 00 24 00 01 00 20 20 01 0d b8 85 a3 00 00 00 00 8a 2e 03 70 73 34 20 01 0d b8 85 a3 00 00 00 00 8a 2e 03 70 73 35

encode-pair DHCPv6-MOS-Address-IS = 2001:0db8:85a3:0000:0000:8a2e:0370:7334, DHCPv6-MOS-Address-ES = 2001:0db8:85a3:0000:0000:8a2e:0370:7335
data 00 36 00 28 00 01 00 10 20 01 0d b8 85 a3 00 00 00 00 8a 2e 03 70 73 34 00 03 00 10 20 01 0d b8 85 a3 00 00 00 00 8a 2e 03 70 73 35

#
#  TLV with single values
#
encode-pair DHCPv6-NTP-Server-Address = 2001:0db8:85a3:0000:0000:8a2e:0370:7334
data 00 38 00 14 00 01 00 10 20 01 0d b8 85 a3 00 00 00 00 8a 2e 03 70 73 34

