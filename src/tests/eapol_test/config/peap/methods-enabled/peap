type = peap
peap {
	#  Which tls-config section the TLS negotiation parameters
	#  are in - see EAP-TLS above for an explanation.
	#
	#  In the case that an old configuration from FreeRADIUS
	#  v2.x is being used, all the options of the tls-config
	#  section may also appear instead in the 'tls' section
	#  above. If that is done, the tls= option here (and in
	#  tls above) MUST be commented out.
	#
	tls = tls-common

	#  The tunneled EAP session needs a default
	#  EAP type which is separate from the one for
	#  the non-tunneled EAP module.  Inside of the
	#  PEAP tunnel, we recommend using MS-CHAPv2,
	#  as that is the default type supported by
	#  Windows clients.
	#
	default_eap_type = mschapv2

	#  When the tunneled session is proxied, the
	#  home server may not understand EAP-MSCHAP-V2.
	#  Set this entry to "no" to proxy the tunneled
	#  EAP-MSCHAP-V2 as normal MSCHAPv2.
	#
#	proxy_tunneled_request_as_eap = yes

	#
	#  The inner tunneled request can be sent
	#  through a virtual server constructed
	#  specifically for this purpose.
	#
	#  If this entry is commented out, the inner
	#  tunneled request will be sent through
	#  the virtual server that processed the
	#  outer requests.
	#
	virtual_server = "inner-tunnel"

	# This option enables support for MS-SoH
	# see doc/SoH.txt for more info.
	# It is disabled by default.
	#
#	soh = yes

	#
	# The SoH reply will be turned into a request which
	# can be sent to a specific virtual server:
	#
#	soh_virtual_server = "soh-server"

	#
	# Unlike EAP-TLS, PEAP does not require a client certificate.
	# However, you can require one by setting the following
	# option. You can also override this option by setting
	#
	#	EAP-TLS-Require-Client-Cert = Yes
	#
	# in the control items for a request.
	#
#	require_client_cert = yes
}
