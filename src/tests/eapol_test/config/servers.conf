#  -*- text -*-
#
#  test configuration file.  Do not install.
#
#  $Id$
#

#
#  Minimal radiusd.conf for testing EAP
#

testdir      = $ENV{TESTDIR}
output       = $ENV{OUTPUT}
run_dir      = ${output}
raddb        = raddb
pidfile      = ${run_dir}/radiusd.pid
panic_action = "gdb -batch -x src/tests/panic.gdb %e %p > ${run_dir}/gdb.log 2>&1; cat ${run_dir}/gdb.log"

maindir      = ${raddb}
radacctdir   = ${run_dir}/radacct
modconfdir   = ${maindir}/mods-config
certdir      = ${maindir}/certs
cadir        = ${maindir}/certs
test_port    = $ENV{TEST_PORT}

#  Only for testing!
#  Setting this on a production system is a BAD IDEA.
security {
	allow_vulnerable_openssl = yes
}

#
#  References by some modules for default thread pool configuration
#
thread pool {
	num_networks = 1
	num_workers = 1
}

#
#  The test client
#
client eapol_test {
	ipaddr = 127.0.0.1
	secret = testing123
}

#
#  Modules needed for EAP
#
modules {
	$INCLUDE ${maindir}/mods-available/always
	$INCLUDE ${maindir}/mods-available/chap
	$INCLUDE ${maindir}/mods-available/pap
	$INCLUDE ${maindir}/mods-available/mschap

	#
	#  Include the modules which are enabled for this particular
	#  test.
	#
	$-INCLUDE ${testdir}/config/$ENV{METHOD}/mods-enabled/

	eap {
		#
		#  default_eap_type is set in the method file
		#
		ignore_unknown_eap_types = no

		#
		#  Should use the same set of snakeoil certs as
		#  eapol_test.
		#
		tls-config tls-common {
			chain {
				certificate_file = ${certdir}/rsa/server.pem

				private_key_password = whatever
				private_key_file = ${certdir}/rsa/server.pem
				ca_file = ${cadir}/rsa/ca.pem
			}

			ca_file = ${cadir}/rsa/ca.pem
			ca_path = ${cadir}
			dh_file = ${certdir}/dh

			fragment_size = 1024
			include_length = no

			cipher_list = "DEFAULT"
			ecdh_curve = "prime256v1"

			verify {
			}

			ocsp {
			}
		}

		#
		#  This method MUST exist because we're running it.
		#
		$INCLUDE ${testdir}/config/$ENV{METHOD}/methods-enabled/$ENV{METHOD}
	}

}

policy {
	files.authorize {
		split_username_nai
		if (&Stripped-User-Name == "bob") {
			update control {
				&Password.Cleartext := "bob"
			}
		}
	}

	$INCLUDE ${maindir}/policy.d/
}

#
#  Minimal set of virtual servers for performing EAP
#
server test {
	namespace = radius

	listen {
		transport = udp

		udp {
			ipaddr = 127.0.0.1
			port = ${test_port}
		}
		type = Access-Request
	}

	recv Access-Request {
		if (&User-Name =~ /with.*client.*cert/) {
			update control {
				&EAP-TLS-Require-Client-Cert := yes
			}
		}
		files
		eap
	}

	authenticate eap {
		eap
	}

	authenticate pap {
		pap
	}

	authenticate mschap {
		mschap
	}

	send Access-Accept {
		ok
	}

	send Access-Reject {
		ok
	}
}

#
#  Some methods don't have a sites-enabld.  Tho arguably they should.
#
$-INCLUDE ${testdir}/config/$ENV{METHOD}/sites-enabled/$ENV{METHOD}
