# -*- text -*-
##
## test.conf	-- Virtual server configuration for testing radiusd.
##
##	$Id$
##

test_port = $ENV{TEST_PORT}

#  Only for testing!
#  Setting this on a production system is a BAD IDEA.
security {
	allow_vulnerable_openssl = yes
}

#
#  References by some modules for default thread pool configuration
#
thread pool {
	num_networks = 1
	num_workers = 1
}

#
#  The test client
#
client eapol_test {
	ipaddr = 127.0.0.1
	secret = testing123
}

#
#  Modules needed for EAP
#
modules {
	$INCLUDE ${maindir}/mods-available/always
	$INCLUDE ${maindir}/mods-available/chap
	$INCLUDE ${maindir}/mods-available/pap
	$INCLUDE ${maindir}/mods-available/mschap

	eap {
		default_eap_type = md5
		ignore_unknown_eap_types = no
		cisco_accounting_username_bug = no

		#
		#  Should use the same set of snakeoil certs as
		#  eapol_test.
		#
		tls-config tls-common {
			chain {
				certificate_file = ${certdir}/rsa/server.pem

				private_key_password = whatever
				private_key_file = ${certdir}/rsa/server.pem
				ca_file = ${cadir}/rsa/ca.pem
			}

			ca_file = ${cadir}/rsa/ca.pem
			ca_path = ${cadir}
			dh_file = ${certdir}/dh

			fragment_size = 1024
			include_length = no

			cipher_list = "DEFAULT"
			ecdh_curve = "prime256v1"

			verify {
			}

			ocsp {
			}
		}
		$INCLUDE ${testdir}/methods-enabled/
	}
}

policy {
	files.authorize {
		if (User-Name == "bob") {
			update control {
				&Cleartext-Password := "bob"
			}
		}
	}

	$INCLUDE ${maindir}/policy.d/
}

#
#  Minimal set of virtual servers for performing EAP
#
server test {
	namespace = radius

	listen {
		transport = udp

		udp {
			ipaddr = 127.0.0.1
			port = ${test_port}
		}
		type = Access-Request
	}

	recv Access-Request {
		if (&User-Name =~ /with.*client.*cert/) {
			update control {
				&EAP-TLS-Require-Client-Cert := yes
			}
		}

		# Test credentials for EAP-SIM, EAP-AKA, EAP-AKA'
                update control {
                        &Sim-Ki  := 0x465b5ce8b199b49faa5f0a2ee238a6bc
                        &Sim-Opc := 0xcd63cb71954a9f4e48a5994e37a02baf
                        &Sim-SQN := 3
                }
		files
		eap
	}

	authenticate eap {
		eap
	}

	authenticate pap {
		pap
	}

	authenticate mschap {
		mschap
	}

	send Access-Accept {
		ok
	}

	send Access-Reject {
		ok
	}
}

server inner-tunnel {
	namespace = radius
	listen {
	       type = Access-Request
	}

	recv Access-Request {
		files
		pap
		chap
		mschap
		eap
	}

	authenticate pap {
		pap
	}

	authenticate chap {
		chap
	}

	authenticate mschap {
		mschap
	}

	authenticate eap {
		eap
	}

	send Access-Accept {
	}

	send Access-Reject {
	}

	send Access-Challenge {
	}
}
