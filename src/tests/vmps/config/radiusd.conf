#  -*- text -*-
#
#  test configuration file.  Do not install.
#
#  $Id$
#

#
#  Minimal radiusd.conf for VMPS server
#

testdir      = $ENV{TESTDIR}
output       = $ENV{OUTPUT}
run_dir      = ${output}
raddb        = raddb
pidfile      = ${run_dir}/radiusd.pid
panic_action = "gdb -batch -x src/tests/panic.gdb %e %p > ${run_dir}/gdb.log 2>&1; cat ${run_dir}/gdb.log"

maindir      = ${raddb}
radacctdir   = ${run_dir}/radacct
modconfdir   = ${maindir}/mods-config
certdir      = ${maindir}/certs
cadir        = ${maindir}/certs
test_port    = $ENV{TEST_PORT}

#  Only for testing!
#  Setting this on a production system is a BAD IDEA.
security {
	allow_vulnerable_openssl = yes
}

policy {
	$INCLUDE ${maindir}/policy.d/
}

client localhost {
	ipaddr = 127.0.0.1
	secret = testing123
	proto = udp
}

modules {
	always reject {
		rcode = reject
	}
	always fail {
		rcode = fail
	}
	always ok {
		rcode = ok
	}
	always handled {
		rcode = handled
	}
	always invalid {
		rcode = invalid
	}
	always disallow {
		rcode = disallow
	}
	always notfound {
		rcode = notfound
	}
	always noop {
		rcode = noop
	}
	always updated {
		rcode = updated
	}
}

#
#  This virtual server is chosen for processing requests when using:
#
#	radiusd -Xd src/tests/output -i 127.0.0.1 -p 12340 -n test
#
server vmps {
	namespace = vmps

	listen {
		type = Join-Request
		type = Reconfirm-Request

		transport = udp

		udp {
			port = ${test_port}
			ipaddr = *
#			interface = eth0
#			max_packet_size = 4096
#			recv_buff = 1048576
#			send_buff = 1048576
#			src_ipaddr = ""
		}
	}

	recv Join-Request {
		#
		#	Validate reply
		#
		if ("%{VLAN-Name}" == "Kalos0") {
			update reply {
				&Error-Code := No-Error
			}
		} else {
			update reply {
				&Error-Code := Deny
			}
		}
	}

	send Join-Response {
		update reply {
			&Packet-Type = Join-Response
			&Cookie = &MAC-Address
			&VLAN-Name := &VLAN-Name
		}
	}

	recv Reconfirm-Request {
		ok
	}

	send Reconfirm-Response {
		ok
	}

	send Do-Not-Respond {
	     ok
	}
}
