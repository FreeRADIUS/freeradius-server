#
# PRE: update update-remove-any if
#
update {
	&control !* ANY
	&request.Tmp-String-0 := "5RNqNl8iYLbkCc7JhR8as4TtDDCX6otuuWtcja8rITUyx9zrnHSe9tTHGmKK"	# 60 byte salt
}

#
#  Unencoded Password.Cleartext in password with header
#
update {
 	&control.Password.With-Header := "%{User-Password}"
}
pap.authorize
pap.authenticate {
	reject = 1
}
if (reject) {
	test_fail
}

update {
	&control !* ANY
}

#
#  Base64 encoded Password.Cleartext in password with header
#
update {
	&Tmp-String-1 := "{clear}%{User-Password}"
}
update {
 	&control.Password.With-Header := "%{base64:%{Tmp-String-1}}"
}
pap.authorize
pap.authenticate {
	reject = 1
}
if (reject) {
	test_fail
}

update {
	&control !* ANY
}

#
#  Hex encoded SSHA password
#
update {
	&control.Password.With-Header += "{ssha}%{hex:%{sha1:%{User-Password}%{Tmp-String-0}}}%{hex:%{Tmp-String-0}}"
}

pap.authorize
pap.authenticate {
	reject = 1
}
if (reject) {
	test_fail
}

update {
	&control !* ANY
}

#
#  Base64 encoded SSHA password
#
update {
	&control.Tmp-String-1 := "%{hex:%{sha1:%{User-Password}%{Tmp-String-0}}}%{hex:%{Tmp-String-0}}"
}

# To Binary
update {
	&control.Tmp-Octets-0 := "%{bin:%{control.Tmp-String-1}}"
}

# To Base64
update {
	&control.Tmp-String-1 := "%{base64:%{control.Tmp-Octets-0}}"
}

update {
	&control.Password.With-Header += "{ssha}%{control.Tmp-String-1}"
}

pap.authorize
pap.authenticate {
	reject = 1
}
if (reject) {
	test_fail
}

update {
	&control !* ANY
}

#
#  Base64 of Base64 encoded SSHA password
#
update {
	&control.Tmp-String-1 := "%{hex:%{sha1:%{User-Password}%{Tmp-String-0}}}%{hex:%{Tmp-String-0}}"
}

# To Binary
update {
	&control.Tmp-Octets-0 := "%{bin:%{control.Tmp-String-1}}"
}

# To Base64
update {
	&control.Tmp-String-1 := "{ssha}%{base64:%{control.Tmp-Octets-0}}"
}

update {
	&control.Password.With-Header += "%{base64:%{control.Tmp-String-1}}"
}

pap.authorize
pap.authenticate {
	reject = 1
}
if (reject) {
	test_fail
}

update {
	&control !* ANY
}

update control {
	&Auth-Type := Accept
}

success
