#
# PRE: edit-list-remove if
#
&control := {}
&Tmp-String-0 := "5RNqNl8iYLbkCc7JhR8as4TtDDCX6otuuWtcja8rITUyx9zrnHSe9tTHGmKK"	# 60 byte salt

#
#  Unencoded Password.Cleartext in password with header
#
&control := {
	&Password.With-Header = &User-Password
}

pap.authorize
pap.authenticate {
	reject = 1
}
if (reject) {
	test_fail
}

#
#  Base64 encoded Password.Cleartext in password with header
#
&Tmp-String-1 := "{clear}%{User-Password}"
&control := {
	&Password.With-Header = "%(base64.encode:%{Tmp-String-1})"
}

pap.authorize
pap.authenticate {
	reject = 1
}
if (reject) {
	test_fail
}

#
#  Hex encoded SSHA password
#
&control := {
	&Password.With-Header = "{ssha}%{hex:%{sha1:%{User-Password}%{Tmp-String-0}}}%{hex:%{Tmp-String-0}}"
}

pap.authorize
pap.authenticate {
	reject = 1
}
if (reject) {
	test_fail
}

#
#  Base64 encoded SSHA password
#
&control := {
	 &Tmp-String-1 = "%{hex:%{sha1:%{User-Password}%{Tmp-String-0}}}%{hex:%{Tmp-String-0}}"
}

# To Binary
&control.Tmp-Octets-0 := "%{bin:%{control.Tmp-String-1}}"

# To Base64
&control.Tmp-String-1 := "%(base64.encode:%{control.Tmp-Octets-0})"
&control.Password.With-Header := "{ssha}%{control.Tmp-String-1}"

pap.authorize
pap.authenticate {
	reject = 1
}
if (reject) {
	test_fail
}

#
#  Base64 of Base64 encoded SSHA password
#
&control := {
	&Tmp-String-1 = "%{hex:%{sha1:%{User-Password}%{Tmp-String-0}}}%{hex:%{Tmp-String-0}}"
}

# To Binary
&control.Tmp-Octets-0 := "%{bin:%{control.Tmp-String-1}}"

# To Base64
&control.Tmp-String-1 := "{ssha}%(base64.encode:%{control.Tmp-Octets-0})"
&control.Password.With-Header := "%(base64.encode:%{control.Tmp-String-1})"

pap.authorize
pap.authenticate {
	reject = 1
}
if (reject) {
	test_fail
}


&control := {
	&Auth-Type = Accept
}

success
