#
# PRE: update
#
update request {
	&Tmp-String-0 := 'aaa'
	&Tmp-String-1 := "\n\n\n"
	&Tmp-String-2 := "the quick brown fox jumped over the lazy dog"
}

#
#  Non-regex base substitutions
#

# Global substitution
if ("%{sub:a b %{Tmp-String-0}}" != 'bbb') {
	test_fail
}

# No match
if ("%{sub:c b %{Tmp-String-0}}" != 'aaa') {
	test_fail
}

# Line ending rewrite
if ("%{sub:\n \r %{Tmp-String-1}}" != "\r\r\r") {
	test_fail
}

# Removal
if ("%{sub:a  %{Tmp-String-0}}" != "") {
	test_fail
}

# Removal of last word only
if ("%{sub:dog  %{Tmp-String-2}}" != "the quick brown fox jumped over the lazy ") {
	test_fail
}

# Removal of first and subsequent word
if ("%{sub:the  %{Tmp-String-2}}" != " quick brown fox jumped over  lazy dog") {
	test_fail
}

# Removal of middle word
if ("%{sub:jumped  %{Tmp-String-2}}" != "the quick brown fox  over the lazy dog") {
	test_fail
}

# Replacement of last word only
if ("%{sub:dog cat %{Tmp-String-2}}" != "the quick brown fox jumped over the lazy cat") {
	test_fail
}

# Replacement of first and subsequent word
if ("%{sub:the cat %{Tmp-String-2}}" != "cat quick brown fox jumped over cat lazy dog") {
	test_fail
}

# Replacement of middle word
if ("%{sub:jumped cat %{Tmp-String-2}}" != "the quick brown fox cat over the lazy dog") {
	test_fail
}

if ("${feature.regex-pcre2}" == 'yes') {
# Basic substitutions
if ("%{sub:/a/ b %{Tmp-String-0}}" != 'baa') {
	test_fail
}

# Global substitution
if ("%{sub:/a/g b %{Tmp-String-0}}" != 'bbb') {
	test_fail
}

# No match
if ("%{sub:/z/ b %{Tmp-String-0}}" != 'aaa') {
	test_fail
}

#
#  Newline manipulation
#

# Check that newlines really are newlines
if ("%{length:%{Tmp-String-1}}" != 3) {
	test_fail
}

# Strip out just the first newline
if ("%{sub:/^./s  %{Tmp-String-1}}" != "\n\n") {
	test_fail
}

if ("%{sub:/\n/  %{Tmp-String-1}}" != "\n\n") {
	test_fail
}

# Strip out all the newlines
if ("%{sub:/\n/g  %{Tmp-String-1}}" != '') {
	test_fail
}

# Line ending switch
if ("%{sub:/\n/g \r %{Tmp-String-1}}" != "\r\r\r") {
	test_fail
}

# Bad regex
if ("%{sub:/***/g . %{Tmp-String-0}}" != '') {
	test_fail
}

if (&Module-Failure-Message[1] != 'Failed compiling regex: quantifier does not follow a repeatable item') {
	test_fail
}

# Empty regex
if ("%{sub://g . %{Tmp-String-0}}" != '') {
	test_fail
}

if (&Module-Failure-Message[1] != 'Failed compiling regex: Empty expression') {
	test_fail
}
}

success
