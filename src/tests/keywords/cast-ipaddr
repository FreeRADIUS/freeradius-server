#
#  PRE: update if redundant
#
update {
	&control:Cleartext-Password	:= 'hello'
	&request:NAS-IP-Address		:= 127.0.0.1
	&request:Tmp-Integer-0		:= 2130706433
}

update request {
	&Tmp-String-0[0] := "%{request:NAS-IP-Address}"
}

if (<ipaddr>&Tmp-Integer-0[0] != NAS-IP-Address) {
	test_fail
}

#
#  Update statements do implicit casts, so we can check
#  cast results are correct, by using the update to perform
#  the cast, and looking at the results.
#
update request {
	&Tmp-Cast-Ipaddr	:= 203.0.113.1
	&Tmp-Cast-IPv4Prefix	:= 203.0.113.0/24
	&Tmp-Cast-IPv4Prefix	+= 203.0.113.1/32
	&Tmp-Cast-IPv6Addr	:= 2001:DB8::1
	&Tmp-Cast-IPv6Addr	+= ::ffff:203.0.113.1
	&Tmp-Cast-IPv6Prefix	:= 2001:DB8::/32
	&Tmp-Cast-IPv6Prefix	+= ::ffff:203.0.113.1/128
	&Tmp-Cast-IPv6Prefix	+= ::ffff:203.0.113.1/64
}

#
#  IPv4 address to IPv6 address
#
update control {
	&Tmp-Cast-IPv6addr	:= &Tmp-Cast-IPaddr[0]
}

if (&control:Tmp-Cast-IPv6addr[0] != ::ffff:203.0.113.1) {
	test_fail
}

#
#  IPv6 address to IPv4 address
#
update control {
	&Tmp-Cast-IPaddr[0]	:= &control:Tmp-Cast-IPv6addr[0]
}

if (&control:Tmp-Cast-IPaddr[0] != 203.0.113.1) {
	test_fail
}

#
#  IPv4 prefix to IPv6 prefix
#
update control {
	&Tmp-Cast-IPv6Prefix[0] := &Tmp-Cast-IPv4Prefix[0]
}

if (&control:Tmp-Cast-IPv6Prefix[0] != ::ffff:203.0.113.0/120) {
	test_fail
}

#
#  IPv6 prefix to IPv4 prefix
#
update control {
	&Tmp-Cast-IPv4Prefix[0] := &control:Tmp-Cast-IPv6Prefix[0]
}

if (&control:Tmp-Cast-IPv4Prefix[0] != 203.0.113.1/24) {
	test_fail
}

#
#  IPv4 prefix (32) to IPv6 address
#
update control {
	&Tmp-Cast-IPv6Addr := &Tmp-Cast-IPv4Prefix[1]
}

if (&control:Tmp-Cast-IPv6Addr[0] != ::ffff:203.0.113.1) {
	test_fail
}

#
#  IPv6 prefix (128) to IPv4 address
#
update control {
	&Tmp-Cast-Ipaddr := &Tmp-Cast-IPv6Prefix[1]
}

if (&control:Tmp-Cast-Ipaddr[0] != 203.0.113.1/32) {
	test_fail
}

#
#  IPv4 address to IPv6 prefix (128)
#
update control {
	&Tmp-Cast-IPv6Prefix := &Tmp-Cast-Ipaddr[0]
}

if (&control:Tmp-Cast-IPv6Prefix != ::ffff:203.0.113.1/128) {
	test_fail
}

#
#  IPv6 address to IPv4 prefix (32)
#
update control {
	Tmp-Cast-IPv4Prefix[0] := &Tmp-Cast-IPv6Addr[1]
}

if (&control:Tmp-Cast-IPv4Prefix != 203.0.113.1/32) {
	test_fail
}

#
#  IPv4 address to IPv4 prefix (32)
#
update control {
	&Tmp-Cast-IPv4Prefix := &Tmp-Cast-Ipaddr[0]
}

if (&control:Tmp-Cast-IPv4Prefix != 203.0.113.1/32) {
	test_fail
}

#
#  IPv6 address to IPv6 prefix (128)
#
update control {
	&Tmp-Cast-IPv6Prefix := &Tmp-Cast-Ipv6addr[0]
}

if (&control:Tmp-Cast-IPv6Prefix != 2001:DB8::1/128) {
	test_fail
}

#
#  IPv4 prefix (32) to IPv4 address
#
update control {
	&Tmp-Cast-Ipaddr := &Tmp-Cast-IPv4Prefix[1]
}

if (&control:Tmp-Cast-Ipaddr != 203.0.113.1) {
	test_fail
}

#
#  IPv6 prefix (128) to IPv6 address
#
update control {
	&Tmp-Cast-IPv6Addr := &Tmp-Cast-IPv6Prefix[1]
}

if (&control:Tmp-Cast-IPv6Addr != ::ffff:203.0.113.1) {
	test_fail
}

#
#  And the invalid cases...
#

#
#  IPv6 Prefix < 128 to IPv6 address
#
redundant {
	group {
		update control {
			&Tmp-Cast-IPv6Addr := Tmp-Cast-IPv6Prefix[0]
		}
		test_fail
	}
	group {
		if ("%{Module-Failure-Message}" != 'Assigning value to "Tmp-Cast-ipv6addr" failed: Invalid cast from ipv6prefix to ipv6addr.  Only /128 (not /32) prefixes may be cast to IP address types') {
			test_fail
		}
		update request {
			Module-Failure-Message !* ANY
		}
		ok
	}
}

#
#  IPv6 Prefix < 128 to IPv4 address
#
redundant {
	group {
		update control {
			&Tmp-Cast-Ipaddr := &Tmp-Cast-IPv6Prefix[2]
		}
		test_fail
	}
	group {
		if ("%{Module-Failure-Message}" != 'Assigning value to "Tmp-Cast-ipaddr" failed: Invalid cast from ipv6prefix to ipaddr.  Only /128 (not /64) prefixes may be cast to IP address types') {
			test_fail
		}
		update request {
			Module-Failure-Message !* ANY
		}
		ok
	}
}

#
#  IPv6 Prefix < 96 to IPv4 prefix (causes part of the IPv4/v6 mapping prefix to be masked off)
#
redundant {
	group {
		update control {
			&Tmp-Cast-Ipv4Prefix := &Tmp-Cast-IPv6Prefix[2]
		}
		test_fail
	}
	group {
		if ("%{Module-Failure-Message}" != 'Assigning value to "Tmp-Cast-ipv4prefix" failed: Invalid cast from ipv6prefix to ipv4prefix.  No IPv4-IPv6 mapping prefix') {
			test_fail
		}
		update request {
			&Module-Failure-Message !* ANY
		}
		ok
	}
}

#
#  IPv4 Prefix < 32 to IPv6 address
#
redundant {
	group {
		update control {
			&Tmp-Cast-IPv6Addr := &Tmp-Cast-IPv4Prefix[0]
		}
		test_fail
	}
	group {
		if ("%{Module-Failure-Message}" != 'Assigning value to "Tmp-Cast-ipv6addr" failed: Invalid cast from ipv4prefix to ipv6addr.  Only /32 (not /24) prefixes may be cast to IP address types') {
			test_fail
		}
		update request {
			&Module-Failure-Message !* ANY
		}
		ok
	}
}

#
#  IPv4 Prefix < 32 to IPv4 address
#
redundant {
	group {
		update control {
			&Tmp-Cast-Ipaddr := &Tmp-Cast-IPv4Prefix[0]
		}
		test_fail
	}
	group {
		if ("%{Module-Failure-Message}" != 'Assigning value to "Tmp-Cast-ipaddr" failed: Invalid cast from ipv4prefix to ipaddr.  Only /32 (not 24/) prefixes may be cast to IP address types') {
			test_fail
		}
		update request {
			&Module-Failure-Message !* ANY
		}
		ok
	}
}

#
#  IPv6 Prefix outside mapping range to IPv4 address
#
redundant {
	group {
		update control {
			&Tmp-Cast-Ipaddr := &Tmp-Cast-IPv6Prefix[0]
		}
		test_fail
	}
	group {
		if ("%{Module-Failure-Message}" != 'Assigning value to "Tmp-Cast-ipaddr" failed: Invalid cast from ipv6prefix to ipaddr.  Only /128 (not /32) prefixes may be cast to IP address types') {
			test_fail
		}
		update request {
			&Module-Failure-Message !* ANY
		}
		ok
	}
}

#
#  IPv6 Prefix outside mapping range to IPv4 prefix
#
redundant {
	group {
		update control {
			&Tmp-Cast-IPv4Prefix := &Tmp-Cast-IPv6Prefix[0]
		}
		test_fail
	}
	group {
		if ("%{Module-Failure-Message}" != 'Assigning value to "Tmp-Cast-ipv4prefix" failed: Invalid cast from ipv6prefix to ipv4prefix.  No IPv4-IPv6 mapping prefix') {
			test_fail
		}
		update request {
			&Module-Failure-Message !* ANY
		}
		ok
	}
}

#
#  IPv6 Address outside mapping range to IPv4 address
#
redundant {
	group {
		update control {
			&Tmp-Cast-Ipaddr := &Tmp-Cast-IPv6Addr[0]
		}
		test_fail
	}
	group {
		if ("%{Module-Failure-Message}" != 'Assigning value to "Tmp-Cast-ipaddr" failed: Invalid cast from ipv6addr to ipaddr.  No IPv4-IPv6 mapping prefix') {
			test_fail
		}
		update request {
			&Module-Failure-Message !* ANY
		}
		ok
	}
}

#
#  IPv6 Address outside mapping range to IPv4 prefix
#
redundant {
	group {
		update control {
			&Tmp-Cast-IPv4Prefix := &Tmp-Cast-IPv6Addr[0]
		}
		test_fail
	}
	group {
		if ("%{Module-Failure-Message}" != 'Assigning value to "Tmp-Cast-ipv4prefix" failed: Invalid cast from ipv6addr to ipv4prefix.  No IPv4-IPv6 mapping prefix') {
			test_fail
		}
		update request {
			&Module-Failure-Message !* ANY
		}
		ok
	}
}

success
