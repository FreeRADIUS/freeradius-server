#
# PRE: update
#
update request {
	&Tmp-String-0 := 'aaa'
	&Tmp-String-1 := "\n\n\n"
	&Tmp-String-2 := "the quick brown fox jumped over the lazy dog"
}

#
#  Non-regex base substitutions
#

# Global substitution
if ("%(subst:%{Tmp-String-0} a b)" != 'bbb') {
	test_fail
}

# No match
if ("%(subst:%{Tmp-String-0} c b)" != 'aaa') {
	test_fail
}

# Line ending rewrite
if ("%(subst:%{Tmp-String-1} \n \r)" != "\r\r\r") {
	test_fail
}

# Removal
if ("%(subst:%{Tmp-String-0} a '')" != "") {
	test_fail
}

# Removal of last word only
if ("%(subst:%{Tmp-String-2} dog '')" != "the quick brown fox jumped over the lazy ") {
	test_fail
}

# Removal of first and subsequent word
if ("%(subst:%{Tmp-String-2} the '')" != " quick brown fox jumped over  lazy dog") {
	test_fail
}

# Removal of middle word
if ("%(subst:%{Tmp-String-2} jumped '')" != "the quick brown fox  over the lazy dog") {
	test_fail
}

# Replacement of last word only
if ("%(subst:%{Tmp-String-2} dog cat)" != "the quick brown fox jumped over the lazy cat") {
	test_fail
}

# Replacement of first and subsequent word
if ("%(subst:%{Tmp-String-2} the cat)" != "cat quick brown fox jumped over cat lazy dog") {
	test_fail
}

# Replacement of middle word
if ("%(subst:%{Tmp-String-2} jumped cat)" != "the quick brown fox cat over the lazy dog") {
	test_fail
}

if ("${feature.regex-pcre2}" == 'yes') {
# Basic substitutions
if ("%(subst:%{Tmp-String-0} /a/ b)" != 'baa') {
	test_fail
}

# Global substitution
if ("%(subst:%{Tmp-String-0} /a/g b)" != 'bbb') {
	test_fail
}

# No match
if ("%(subst:%{Tmp-String-0} /z/ b)" != 'aaa') {
	test_fail
}

#
#  Newline manipulation
#

# Check that newlines really are newlines
if ("%(length:%{Tmp-String-1})" != 3) {
	test_fail
}

# Strip out just the first newline
if ("%(subst:%{Tmp-String-1} /^./s '')" != "\n\n") {
	test_fail
}

if ("%(subst:%{Tmp-String-1} /\n/ '')" != "\n\n") {
	test_fail
}

# Strip out all the newlines
if ("%(subst:%{Tmp-String-1} /\n/g '')" != '') {
	test_fail
}

# Line ending switch
if ("%(subst:%{Tmp-String-1} /\n/g \r)" != "\r\r\r") {
	test_fail
}

# Bad regex
if ("%(subst:%{Tmp-String-0} /***/g .)") {
	test_fail
}

if (&Module-Failure-Message[0] != 'Failed compiling regex: quantifier does not follow a repeatable item') {
	test_fail
}

update request {
	&Module-Failure-Message !* ANY
}

# Empty regex
if ("%(subst:%{Tmp-String-0} //g .)") {
	test_fail
}

if (&Module-Failure-Message[0] != 'Failed compiling regex: Empty expression') {
	test_fail
}
}

success
