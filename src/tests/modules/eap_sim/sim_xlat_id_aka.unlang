if ("%(aka_sim_id_method:%{User-Name})" != 'AKA') {
	test_fail
}

if ("%(aka_sim_id_type:%{User-Name})" != 'Permanent') {
	test_fail
}

#
#  Encrypt the permanent ID
#
update control {
	&Tmp-String-0 := '1420032219455258'
}
update control {
	&User-Name := "%(3gpp_pseudonym_encrypt:&User-Name &control.Tmp-String-0 6)"
}

#
#  0.2 - Can we get the EAP method from the encrypted blob correctly?
#
if ("%(aka_sim_id_method:%{control.User-Name})" != 'AKA') {
	test_fail
}

#
#  0.3 - Can we identify the encrypted blob correctly?
#
if ("%(aka_sim_id_type:%{control.User-Name})" != 'Pseudonym') {
	test_fail
}

#
#  0.4 - We should refuse to re-encrypt an encrypted NAI
#
if ("%(3gpp_pseudonym_encrypt:&control.User-Name &control.Tmp-String-0 6)" != '') {
	test_fail
}

#
#  0.5 - Get the original IMSI back again
#
update control {
	&Tmp-String-1 := "%(3gpp_pseudonym_decrypt:&control.User-Name &control.Tmp-String-0)"
}

if (&control.Tmp-String-1 != &User-Name) {
	test_fail
}

#
#  1.0 Now try with the hint coming from &control.EAP-Type
#
if (&User-Name =~ /^[0-9](.*)/) {
	update request {
		&User-Name[1] := "%{1}"
	}
	update control {
		&EAP-Type := AKA
	}
}

#
#  1.1 - Encrypt the permanent ID
#
update control {
	&Tmp-String-0 := '1420032219455259'
}
update control {
	&User-Name[1] := "%(3gpp_pseudonym_encrypt:&User-Name[1] &control.Tmp-String-0 6)"
}

#
#  1.2 - Can we identify the encrypted blob correctly?
#
if ("%(aka_sim_id_type:%{control.User-Name[1]})" != 'Pseudonym') {
	test_fail
}

#
#  1.3 - We should refuse to re-encrypt an encrypted NAI
#
if ("%(3gpp_pseudonym_encrypt:&control.User-Name[1] &control.Tmp-String-0 6)" != '') {
	test_fail
}

#
#  1.4 - Get the original IMSI back again
#
update control {
	&Tmp-String-1 := "%(3gpp_pseudonym_decrypt:&control.User-Name[1] &control.Tmp-String-0)"
}

if (&control.Tmp-String-1 != "0%{User-Name[1]}") {
	test_fail
}

test_pass
