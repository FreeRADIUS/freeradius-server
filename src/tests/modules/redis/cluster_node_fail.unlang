#
#  Run the "redis" xlat
#
$INCLUDE cluster_reset.inc

#  Hashes to Redis cluster node master 1
if (!("%(redis:SET b 'boom')" == 'OK')) {
	test_fail
}

#  Leave some time (500ms) for the synchronisation
%(delay:0.5)

#  Note the current master
&Tmp-String-1 := %(redis.node:b 0)

#  Note the current replica
&Tmp-String-2 := %(redis.node:b 1)

#  Cause one of the redis cluster nodes to SEGV
if ("%(redis:@%(redis.node:b 0) DEBUG SEGFAULT)" != '') {
	test_fail
}

#  Forcefully failover the slave for that node
if (!("%(redis:@%{Tmp-String-2} CLUSTER FAILOVER TAKEOVER)" == 'OK')) {
	test_fail
}

#  Allow time for the takeover to propagate to other nodes
foreach &control.Tmp-Integer-0 {
	# Keep remapping the cluster
	%(redis.remap:%{Tmp-String-2})

	if (%(redis.node:b 0) == &Tmp-String-2) {
		break
	}
	%(delay:0.5)
}

if (!("%(redis:GET b)" == 'boom')) {
	test_fail
}

#  Kill that one too
if ("%(redis:@%(redis.node:b) DEBUG SEGFAULT)" != '') {
	test_fail
}

# No alternatives...
%(delay:0.5)
if ("%(redis:GET b)" == 'boom') {
	test_fail
}

test_pass
