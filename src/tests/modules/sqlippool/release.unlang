#
#  Test releasing IP addresses in the sqlippool module
#
uint32 expiry
control.IP-Pool.Name := 'test_release'

#
#  Add IP addresses
#
%sql("DELETE FROM fr_ippool WHERE pool_name = '%{control.IP-Pool.Name}'")
%sql("INSERT INTO fr_ippool (pool_name, address, expiry_time) VALUES ('%{control.IP-Pool.Name}', '192.168.0.1', datetime('now', '-00:10'))")

#
#  Check allocation
#
sqlippool.allocate
if (!updated) {
	test_fail
}

if !(reply.Framed-IP-Address == 192.168.0.1) {
	test_fail
}

#
#  Release the IP address
#
Framed-IP-Address := reply.Framed-IP-Address

sqlippool.release
if !(updated) {
	test_fail
}

#
#  Verify the association with the device has been removed
#
if (%sql("SELECT address FROM fr_ippool WHERE pool_name = '%{control.IP-Pool.Name}' AND owner = '%{Calling-Station-Id}'")) {
	test_fail
}


# Check the expiry - releasing an address sets the exipry to now
# Allow for some time passing between packet processing and "now"
expiry := %sql("SELECT strftime('%%s', expiry_time) FROM fr_ippool WHERE pool_name = '%{control.IP-Pool.Name}' AND address = '%{reply.Framed-IP-Address}'")
if (expiry > (%l + 5)) {
	test_fail
}

if ((%l - expiry) > 5) {
	test_fail
}

#
#  Release the IP address again
#  Will return notfound as address is already released.
#
Framed-IP-Address := reply.Framed-IP-Address

sqlippool.release

if (!notfound) {
	test_fail
}

reply := {}

test_pass
