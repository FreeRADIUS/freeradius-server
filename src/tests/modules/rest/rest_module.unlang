# Pre-set Login-LAT-Node to check correct operator behaviour
control.Login-LAT-Node := "foo"

# Test "authorize" rest call.  Uses http to a GET end point
rest

debug_control

if (!(REST-HTTP-Status-Code == 200)) {
	test_fail
}

if (!(control.Filter-Id == "authorize")) {
	test_fail
}

if (!(control.Callback-Id == "GET")) {
	test_fail
}

if (!(control.Callback-Id[*] == "/user/<username>/mac/<client>")) {
	test_fail
}

if (!(control.User-Name == "Bob")) {
	test_fail
}

# The "op" for setting Login-LAT-Node is ^=
if (!(control.Login-LAT-Node[0] == "Bob") || !(control.Login-LAT-Node[1] == "foo")) {
	test_fail
}

# Reset control attributes
control -= Filter-Id[*]
control -= Callback-Id[*]
control -= User-Name[*]

# Pre-fill NAS-IP-Address to check operator behaviour
control.NAS-IP-Address := "10.0.0.10"
test_pass
handled
# Test "accounting" rest call.  Uses https to a POST end point
rest.accounting

if (!(REST-HTTP-Status-Code == 200)) {
	test_fail
}

if (!(control.Filter-Id == "accounting")) {
	test_fail
}

if (!(control.Callback-Id == "POST")) {
	test_fail
}

if (!(control.Callback-Id[*] == "/user/<username>/mac/<client>")) {
	test_fail
}

if (!(control.User-Name == "Bob")) {
	test_fail
}

if (!(control.Login-LAT-Node[0] == "Bob") || !(control.Login-LAT-Node[1] == "Bob") || !(control.Login-LAT-Node[2] == "foo")) {
	test_fail
}

# NAS IP Address is passed in body data
if (!(control.NAS-IP-Address[0] == "10.0.0.10") || !(control.NAS-IP-Address[1] == "192.168.1.1")) {
	test_fail
}

debug_control

test_pass
