sql {
	driver = "sqlite"
	dialect = "sqlite"
	sqlite {
		# Path to the sqlite database
		filename = "$ENV{MODULE_TEST_DIR}/sql_sqlite/$ENV{TEST}/rlm_sql_sqlite.db"

		# If the file above does not exist and bootstrap is set
		# a new database file will be created, and the SQL statements
		# contained within the file will be executed.
		bootstrap = "${modconfdir}/${..:name}/main/${..dialect}/schema.sql"
	}
	radius_db = "radius"

	acct_table1 = "radacct"
	acct_table2 = "radacct"
	postauth_table = "radpostauth"
	authcheck_table = "radcheck"
	groupcheck_table = "radgroupcheck"
	authreply_table = "radreply"
	groupreply_table = "radgroupreply"
	usergroup_table = "radusergroup"
	read_groups = yes

	pool {
		start = 1
		min = 0
		max = 1
		spare = 3
		lifetime = 1
		idle_timeout = 60
		retry_delay = 1
	}

	# The group attribute specific to this instance of rlm_sql
	group_attribute = "SQL-Group"
	cache_groups = yes

	# Read database-specific queries
	$INCLUDE ${modconfdir}/${.:name}/main/${dialect}/queries.conf
}

sql sql2 {
	driver = "sqlite"
	dialect = "sqlite"
	sqlite {
		# Path to the sqlite database
		filename = "$ENV{MODULE_TEST_DIR}/sql_sqlite/$ENV{TEST}/rlm_sql_sqlite.db"

		# If the file above does not exist and bootstrap is set
		# a new database file will be created, and the SQL statements
		# contained within the file will be executed.
		bootstrap = "${modconfdir}/${..:name}/main/${..dialect}/schema.sql"
	}
	radius_db = "radius"

	acct_table1 = "radacct"
	acct_table2 = "radacct"
	postauth_table = "radpostauth"
	authcheck_table = "radcheck"
	groupcheck_table = "radgroupcheck"
	authreply_table = "radreply"
	groupreply_table = "radgroupreply"
	usergroup_table = "radusergroup"
	read_groups = yes

	pool {
		start = 1
		min = 0
		max = 1
		spare = 3
		lifetime = 1
		idle_timeout = 60
		retry_delay = 1
	}

	# The group attribute specific to this instance of rlm_sql
	group_attribute = "SQL-Group"
	cache_groups = yes

	# Read database-specific queries
	$INCLUDE ${modconfdir}/${.:name}/main/${dialect}/queries.conf
}

redundant sql_redundant {
	sql
	sql2
}
