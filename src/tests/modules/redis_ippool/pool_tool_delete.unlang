#
#  Run the "redis" xlat
#
$INCLUDE cluster_reset.inc

update control {
	&IP-Pool.Name := 'test_delete'
}

#
#  Add IP addresses
#
update request {
	&Tmp-String-0 := `./build/bin/local/rlm_redis_ippool_tool -a 192.168.0.1/32 $ENV{REDIS_IPPOOL_TEST_SERVER}:30001 %{control.IP-Pool.Name} 192.168.0.0`
}

#
#  Check allocation
#
redis_ippool {
	invalid = 1
}
if (updated) {
	test_pass
} else {
	test_fail
}

if (&reply.Framed-IP-Address == 192.168.0.1) {
	test_pass
} else {
	test_fail
}

#
#  Delete the IP address
#
update request {
	&Tmp-String-0 := `./build/bin/local/rlm_redis_ippool_tool -d 192.168.0.1/32 $ENV{REDIS_IPPOOL_TEST_SERVER}:30001 %{control.IP-Pool.Name} 192.168.0.0`
}

#
#  Verify the association with the device has been removed
#
if ("%{redis:EXISTS '{%{control.IP-Pool.Name}%}:device:%{Calling-Station-ID}'}" == '0') {
	test_pass
} else {
	test_fail
}

#
#  Verify the hash information is removed
#
if ("%{redis:EXISTS '{%{control.IP-Pool.Name}%}:ip:%{reply.Framed-IP-Address}'}" == '0') {
	test_pass
} else {
	test_fail
}

# Check the ZSCORE
if ("%{redis:ZCOUNT '{%{control.IP-Pool.Name}%}:pool' -inf +inf}" == 0) {
	test_pass
} else {
	test_fail
}

update {
	&reply !* ANY
}
