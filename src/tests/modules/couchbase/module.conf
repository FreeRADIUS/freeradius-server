#
# Couchbase unit test config
#
couchbase {
	server = "http://$ENV{COUCHBASE_TEST_SERVER}:8091"
	bucket = "radius"
	username = "radius"
	password = "radius"

	opts {
		console_log_level = "5"
		console_log_file = "$ENV{MODULE_TEST_DIR}/libcouchbase.log"
		detailed_errcodes = "true"
	}

	user_key = "raduser_%{User-Name}"
	acct_key = "radacct_%{%{Acct-Unique-Session-Id}:-%{Acct-Session-Id}}"
	doctype = "radacct"
	expire = 2592000

	update {
		&Acct-Session-Id	= 'sessionId'
		&Acct-Unique-Session-Id	= 'uniqueId'
		&Acct-Status-Type	= 'lastStatus'
		&Acct-Authentic		= 'authentic'
		&User-Name		= 'userName'
		&Stripped-User-Name	= 'strippedUserName'
		&Stripped-User-Domain	= 'strippedUserDomain'
		&Realm			= 'realm'
		&NAS-IP-Address		= 'nasIpAddress'
		&NAS-Identifier		= 'nasIdentifier'
		&NAS-Port		= 'nasPort'
		&Called-Station-Id	= 'calledStationId'
		&Called-Station-SSID	= 'calledStationSSID'
		&Calling-Station-Id	= 'callingStationId'
		&Framed-Protocol	= 'framedProtocol'
		&Framed-IP-Address	= 'framedIpAddress'
		&NAS-Port-Type		= 'nasPortType'
		&Connect-Info		= 'connectInfo'
		&Acct-Session-Time	= 'sessionTime'
		&Acct-Input-Packets	= 'inputPackets'
		&Acct-Output-Packets	= 'outputPackets'
		&Acct-Input-Octets	= 'inputOctets'
		&Acct-Output-Octets	= 'outputOctets'
		&Acct-Input-Gigawords	= 'inputGigawords'
		&Acct-Output-Gigawords	= 'outputGigawords'
		&Event-Timestamp	= 'lastUpdated'
	}

	read_clients = yes

	client {
		view = "_design/client/_view/by_id"

		attribute {
			ipaddr                          = 'clientIdentifier'
			secret                          = 'clientSecret'
			shortname                       = 'clientShortname'
			nas_type                        = 'nasType'
			virtual_server                  = 'virtualServer'
			require_message_authenticator   = 'requireMessageAuthenticator'
			limit {
				max_connections             = 'maxConnections'
				lifetime                    = 'clientLifetime'
				idle_timeout                = 'idleTimeout'
			}
		}
	}
}

#rest unit test config
json {
}

rest {
	tls {
		ca_file = "$ENV{top_srcdir}raddb/certs/rsa/ca.pem"
		certificate_file = "$ENV{top_srcdir}raddb/certs/rsa/client.pem"
		private_key_file = "$ENV{top_srcdir}raddb/certs/rsa/client.key"
		private_key_password = "whatever"
		random_file = /dev/urandom
		check_cert_cn = no
		extract_cert_attrs = yes
	}

	connect_uri = "http://radius:radius@$ENV{COUCHBASE_TEST_SERVER}:8091/"

	xlat {
		tls = ${..tls}
	}

	accounting {
		uri = "https://$ENV{COUCHBASE_TEST_SERVER}:8091/"
		method = 'GET'
		body = 'json'
		data = '{"NAS": "%{NAS-IP-Address}", "Password": "%{User-Password}", "Verify": true}'
		tls = ${..tls}
		username = radius
		password = radius
	}
}
