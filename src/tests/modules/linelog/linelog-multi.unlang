string test_string

control.Exec-Export := 'PATH="$ENV{PATH}:/bin:/usr/bin:/opt/bin:/usr/local/bin"'

#
#  Remove old log files
#
%file.rm("$ENV{MODULE_TEST_DIR}/test_multi.log")

#  Check multiple string type attributes are logged correctly
control.Filter-Id := 'test_multi_str'

control += {
	Reply-Message = '0'
	Reply-Message = '1'
	Reply-Message = '2'
	Reply-Message = '3'
	Reply-Message = '4'
	Reply-Message = '5'
	Reply-Message = '6'
	Reply-Message = '7'
	Reply-Message = '8'
	Reply-Message = '9'
	Reply-Message = '10'
}

linelog_ref_multi
test_string := %file.tail("$ENV{MODULE_TEST_DIR}/test_multi.log")

if !(test_string == '0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, ') {
	test_fail
}

# Check octet type attributes are logged in raw form
control += {
	Class = 0x686970706f	# Hippo
	Class = 0x0a		# new line
	Class = 0x626c6970706f	# Blippo
}

control.Filter-Id := 'test_multi_octets'

linelog_ref_multi

test_string := %file.tail("$ENV{MODULE_TEST_DIR}/test_multi.log")

if !(test_string == ', blippo, ') {
	test_fail
}

#  When no attributes that match are available, linelog should return noop
control.Filter-Id := 'test_empty'

linelog_ref_multi
if !(noop) {
	test_fail
}

#  Remove the file
%file.rm("$ENV{MODULE_TEST_DIR}/test_multi.log")

test_pass
