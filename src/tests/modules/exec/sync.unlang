string test_string

#
#  Sync calls return the response
#
test_string := %exec_sync('/bin/sh', '-c', "echo 'hello'")
if (test_string != 'hello') {
	test_fail
}

#
#  Call something which will take longer than the timeout
#
request -= Module-Failure-Message

test_string := %exec_sync('/bin/sleep', '10')

if (Module-Failure-Message != "Execution of external program failed: Timeout running program") {
	test_fail
}

if test_string  {
	test_fail
}

request -= Module-Failure-Message

test_string := %exec_sync('/bin/sh', "$ENV{MODULE_TEST_DIR}/fail.sh")

if test_string {
	test_fail
}

if (Module-Failure-Message != "Execution of external program returned 7") {
	test_fail
}

#
#  Sync calls as modules should have their output added to the request
#
exec_sync_mod

if ((!control.Called-Station-Id) || (control.Called-Station-Id != 'welcome')) {
	test_fail
}

#
#  The script called by this test reads input from both an expanded
#  attribute on the command line and from the environment variables set.
#  It then sets two attributes as two lines of output.
#
exec_sync_attrs

if ((!control.Filter-Id) || (control.Filter-Id != 'tony')) {
	test_fail
}

if ((!control.Callback-Id) || (control.Callback-Id != 'aabbccddeeff')) {
	test_fail
}

if ((!reply.Filter-Id) || (reply.Filter-Id != 'tony')) {
	test_fail
}

#
#  Call a module which returns status code 7 - mapped to module exit
#  code "notfound".  Attributes in its output should be ignored.
#
exec_sync_fail

if (notfound) {
	ok
} else {
	test_fail
}

if (control.NAS-Identifier == "Failure") {
	test_fail
}

control -= Filter-Id[*]
#
#  Call a module which uses an xlat function in its arguments
#
exec_sync_xlat_args

if !(control.Filter-Id == 'TONY') {
	test_fail
}

reply -= Filter-Id[*]
test_pass
