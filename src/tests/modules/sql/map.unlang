# Clear out any rows with priority 0 (each test should use a different
# priority, so they don't interfere with each other).
"%{sql:DELETE FROM radusergroup WHERE priority = 0}"

# Module should return NOOP if there's no result set to work with
map sql 'SELECT * FROM radusergroup WHERE priority = 0' {
	&control.Tmp-String-0	:= 'username'
	&control.Tmp-String-1	:= 'groupname'
	&control.Tmp-Integer-0	:= 'priority'
}
if (noop) {
	test_pass
}
else {
	test_fail
}

if (!&control.Tmp-String-0) {
	test_pass
}
else {
	test_fail
}

if (!&control.Tmp-String-1) {
	test_pass
}
else {
	test_fail
}

if (!&control.Tmp-Integer-0) {
	test_pass
}
else {
	test_fail
}

# Insert our first test row
"%{sql:INSERT INTO radusergroup (username, groupname, priority) VALUES ('bob', 'bar', 0)}"

# Retrieve our test row
map sql 'SELECT * FROM radusergroup WHERE priority = 0' {
	&control.Tmp-String-0	:= 'username'
	&control.Tmp-String-1	:= 'groupname'
	&control.Tmp-Integer-0	:= 'priority'
}
if (updated) {
	test_pass
}
else {
	test_fail
}

if (&control.Tmp-String-0 == 'bob') {
	test_pass
}
else {
	test_fail
}

if (&control.Tmp-String-1 == 'bar') {
	test_pass
}
else {
	test_fail
}

if (&control.Tmp-Integer-0 == 0) {
	test_pass
}
else {
	test_fail
}

# Clear the control list
update {
	&control.Tmp-String-0 !* ANY
	&control.Tmp-String-1 !* ANY
	&control.Tmp-Integer-0 !* ANY
}

# Insert our second test row
"%{sql:INSERT INTO radusergroup (username, groupname, priority) VALUES ('oof', 'rab', 0)}"

# Retrieve our test row(s) - With := we should get the values from the second row
map sql 'SELECT * FROM radusergroup WHERE priority = 0' {
	&control.Tmp-String-0	:= 'username'
	&control.Tmp-String-1	:= 'groupname'
	&control.Tmp-Integer-0	:= 'priority'
}

if (updated) {
	test_pass
}
else {
	test_fail
}

if (&control.Tmp-String-0 == 'oof') {
	test_pass
}
else {
	test_fail
}

if (&control.Tmp-String-1 == 'rab') {
	test_pass
}
else {
	test_fail
}

if (&control.Tmp-Integer-0 == 0) {
	test_pass
}
else {
	test_fail
}

# Clear the control list
update {
	&control.Tmp-String-0 !* ANY
	&control.Tmp-String-1 !* ANY
	&control.Tmp-Integer-0 !* ANY
}

# Retrieve our test row(s) - With = we should get the values from the first row
map sql 'SELECT * FROM radusergroup WHERE priority = 0' {
	&control.Tmp-String-0	= 'username'
	&control.Tmp-String-1	= 'groupname'
	&control.Tmp-Integer-0	= 'priority'
}

if (updated) {
	test_pass
}
else {
	test_fail
}

if (&control.Tmp-String-0 == 'bob') {
	test_pass
}
else {
	test_fail
}

if (&control.Tmp-String-1 == 'bar') {
	test_pass
}
else {
	test_fail
}

if (&control.Tmp-Integer-0 == 0) {
	test_pass
}
else {
	test_fail
}

# Clear the control list
update {
	&control.Tmp-String-0 !* ANY
	&control.Tmp-String-1 !* ANY
	&control.Tmp-Integer-0 !* ANY
}

# Retrieve our test row(s) - With ^= we should get the values from the second row then the first
map sql 'SELECT * FROM radusergroup WHERE priority = 0' {
	&control.Tmp-String-0	^= 'username'
	&control.Tmp-String-1	^= 'groupname'
	&control.Tmp-Integer-0	^= 'priority'
}

if (!updated) {
	test_fail
}

debug_control

if ((&control.Tmp-String-0[0] != 'oof') || (&control.Tmp-String-0[1] != 'bob')) {
	test_fail
}

if ((&control.Tmp-String-1[0] != 'rab') || (&control.Tmp-String-1[1] != 'bar')) {
	test_fail
}

if ((&control.Tmp-Integer-0[0] != 0) || (&control.Tmp-Integer-0[1] != 0)) {
	test_fail
}

# Clear the control list
update {
	&control.Tmp-String-0 !* ANY
	&control.Tmp-String-1 !* ANY
	&control.Tmp-Integer-0 !* ANY
}

# Retrieve our test row(s) - With += we should get the values from both rows
map sql 'SELECT * FROM radusergroup WHERE priority = 0' {
	&control.Tmp-String-0	+= 'username'
	&control.Tmp-String-1	+= 'groupname'
	&control.Tmp-Integer-0	+= 'priority'
}

if ("%{control.Tmp-String-0[#]}" == 2) {
	test_pass
}
else {
	test_fail
}

if ("%{control.Tmp-String-1[#]}" == 2) {
	test_pass
}
else {
	test_fail
}

if ("%{control.Tmp-Integer-0[#]}" == 2) {
	test_pass
}
else {
	test_fail
}

if ((&control.Tmp-String-0[0] == 'bob') && (&control.Tmp-String-0[1] == 'oof')) {
	test_pass
}
else {
	test_fail
}

if ((&control.Tmp-String-1[0] == 'bar') && (&control.Tmp-String-1[1] == 'rab')) {
	test_pass
}
else {
	test_fail
}

if ((&control.Tmp-Integer-0[0] == 0) && (&control.Tmp-Integer-0[1] == 0)) {
	test_pass
}
else {
	test_fail
}

# Clear the control list
update {
	&control.Tmp-String-0 !* ANY
	&control.Tmp-String-1 !* ANY
	&control.Tmp-Integer-0 !* ANY
}

# Retrieve the username column only (should result in noop because not in map)
map sql 'SELECT username FROM radusergroup WHERE priority = 0' {
	&control.Tmp-String-1	+= 'groupname'
	&control.Tmp-Integer-0	+= 'priority'
}

if (noop) {
	test_pass
}
else {
	test_fail
}

# Retrieve test row with specific username (using xlat'd query)
map sql "SELECT * FROM radusergroup WHERE priority = 0 AND username = '%{User-Name}'" {
	&control.Tmp-String-0	= 'username'
	&control.Tmp-String-1	= 'groupname'
	&control.Tmp-Integer-0	= 'priority'
}

if (updated) {
	test_pass
}
else {
	test_fail
}

if (&control.Tmp-String-0 == 'bob') {
	test_pass
}
else {
	test_fail
}

if (&control.Tmp-String-1 == 'bar') {
	test_pass
}
else {
	test_fail
}

if (&control.Tmp-Integer-0 == 0) {
	test_pass
}
else {
	test_fail
}

update request {
	&Tmp-String-0 := "SELECT * FROM radusergroup WHERE priority = 0 AND username = '%{User-Name}'"
}

# Clear the control list
update {
	&control.Tmp-String-0 !* ANY
	&control.Tmp-String-1 !* ANY
	&control.Tmp-Integer-0 !* ANY
}

# Retrieve test row with specific username (using ref'd query)
map sql &Tmp-String-0 {
	&control.Tmp-String-0	= 'username'
	&control.Tmp-String-1	= 'groupname'
	&control.Tmp-Integer-0	= 'priority'
}

if (updated) {
	test_pass
}
else {
	test_fail
}

if (&control.Tmp-String-0 == 'bob') {
	test_pass
}
else {
	test_fail
}

if (&control.Tmp-String-1 == 'bar') {
	test_pass
}
else {
	test_fail
}

if (&control.Tmp-Integer-0 == 0) {
	test_pass
}
else {
	test_fail
}

# Clear the control list
update {
	&control.Tmp-String-0 !* ANY
	&control.Tmp-String-1 !* ANY
	&control.Tmp-Integer-0 !* ANY
}

update request {
	&Tmp-String-0 := 'username'
	&Tmp-String-1 := 'name'
}

# Retrieve our test row(s) - Using different RHS types
map sql 'SELECT * FROM radusergroup WHERE priority = 0' {
	&control.Tmp-String-0	= &Tmp-String-0
	&control.Tmp-String-1	= "group%{Tmp-String-1}"
	&control.Tmp-Integer-0	= `/bin/echo priority`
}

if (updated) {
	test_pass
}
else {
	test_fail
}

if (&control.Tmp-String-0 == 'bob') {
	test_pass
}
else {
	test_fail
}

if (&control.Tmp-String-1 == 'bar') {
	test_pass
}
else {
	test_fail
}

if (&control.Tmp-Integer-0 == 0) {
	test_pass
}
else {
	test_fail
}

test_pass