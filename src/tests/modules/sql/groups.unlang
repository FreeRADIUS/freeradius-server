#
#  Clear out old data
#
string groupname

%sql("DELETE FROM radgroupcheck WHERE groupname = 'groups_group_a'")
%sql("DELETE FROM radgroupcheck WHERE groupname = 'groups_group_b'")
%sql("DELETE FROM radgroupcheck WHERE groupname = 'groups_group_c'")

%sql("DELETE FROM radgroupreply WHERE groupname = 'groups_group_a'")
%sql("DELETE FROM radgroupreply WHERE groupname = 'groups_group_b'")
%sql("DELETE FROM radgroupreply WHERE groupname = 'groups_group_c'")

%sql("DELETE FROM radusergroup WHERE groupname = 'groups_group_a'")
%sql("DELETE FROM radusergroup WHERE groupname = 'groups_group_b'")
%sql("DELETE FROM radusergroup WHERE groupname = 'groups_group_c'")

#
#  Insert new test data
#
%sql("INSERT INTO radusergroup (username, groupname, priority) VALUES ('groups_user_a', 'groups_group_a', 1000)")
%sql("INSERT INTO radusergroup (username, groupname, priority) VALUES ('groups_user_b', 'groups_group_b', 1010)")
%sql("INSERT INTO radusergroup (username, groupname, priority) VALUES ('groups_user_a', 'groups_group_c', 1020)")
%sql("INSERT INTO radusergroup (username, groupname, priority) VALUES ('groups_user_b', 'groups_group_c', 1030)")

%sql("INSERT INTO radgroupcheck (groupname, attribute, op, value) VALUES ('groups_group_a', 'Password.Cleartext', ':=', 'UserAPassword')")
%sql("INSERT INTO radgroupcheck (groupname, attribute, op, value) VALUES ('groups_group_b', 'Password.Cleartext', ':=', 'UserBPassword')")

%sql("INSERT INTO radgroupreply (groupname, attribute, op, value) VALUES ('groups_group_a', 'Reply-Message', ':=', 'Hello User A')")
%sql("INSERT INTO radgroupreply (groupname, attribute, op, value) VALUES ('groups_group_b', 'Reply-Message', ':=', 'Hello User B')")

#
#  Run SQL
#
sql
if (!updated) {
	test_fail
}

if !(control.Password.Cleartext == User-Password) {
	test_fail
}

if !(reply.Reply-Message == "Hello User B") {
	test_fail
}

if (control.SQL-Group[*] == 'groups_group_a') {
	test_fail
}

if !(control.SQL-Group[*] == 'groups_group_b') {
	test_fail
}

#
#  Although the user is in this group, the lack of Fall-Through in radgroupreply
#  means this will never be processed when calling the sql module in authorize context.
#
if (control.SQL-Group[*] == 'groups_group_c') {
	test_fail
}

#
#  Test paircmp group comparisons
#
if (%sql.group('groups_group_a')) {
	test_fail
}

if !(%sql.group('groups_group_b')) {
	test_fail
}

if !(%sql.group('groups_group_c')) {
	test_fail
}

# Non-existent group
if (%sql.group('groups_group_d')) {
	test_fail
}

#
#  Test paircmp group comparisons with dynamic expansions
#
groupname := 'groups_group_b'

if !(%sql.group(%{groupname})) {
	test_fail
}

test_pass
