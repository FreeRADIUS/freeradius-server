#
#  Take copies of the default ca.cnf and client.cnf files
#  and adapt them for use in these tests
#
prepare_cnf {
	string cnf

	cnf = %file.cat("$ENV{top_srcdir}raddb/certs/client.cnf", 16384)
	cnf := %str.subst(cnf, 'user', "user%{clientno}")
	cnf := %str.subst(cnf, ' ./', " $ENV{top_srcdir}raddb/certs/")
	%file.rm("$ENV{OUTPUT_DIR}/client%{clientno}.cnf")

	%clientcnf(cnf)
	cnf = %file.cat("$ENV{top_srcdir}raddb/certs/ca.cnf", 16384)
	%file.rm("$ENV{OUTPUT_DIR}/ca%{clientno}.cnf")
	%cacnf(cnf)
}

#
#  Create a client cert
#
create_client_cert {
	%exec('/usr/bin/openssl', 'req', '-new', '-out', "$ENV{OUTPUT_DIR}/client%{clientno}.csr", '-keyout', "$ENV{OUTPUT_DIR}/client%{clientno}.key", '-config', "$ENV{OUTPUT_DIR}/client%{clientno}.cnf")
	%exec('/usr/bin/openssl', 'ca', '-batch', '-keyfile', "$ENV{top_srcdir}raddb/certs/rsa/ca.key", '-cert', "$ENV{top_srcdir}raddb/certs/rsa/ca.pem", '-in', "$ENV{OUTPUT_DIR}/client%{clientno}.csr", '-key', 'whatever', '-out', "$ENV{OUTPUT_DIR}/client%{clientno}.crt", '-config', "$ENV{OUTPUT_DIR}/client%{clientno}.cnf")
}

#
#  Revoke a client cert
#
revoke_client_cert {
	%exec('/usr/bin/openssl', 'ca', '-config', "$ENV{OUTPUT_DIR}/ca%{clientno}.cnf", '-batch', '-revoke', "$ENV{OUTPUT_DIR}/client%{clientno}.crt", '-keyfile', "$ENV{top_srcdir}raddb/certs/rsa/ca.key", '-cert', "$ENV{top_srcdir}raddb/certs/rsa/ca.pem", '-passin', 'pass:whatever')
}

#
#  Build the CRL
#
build_crl {
	%exec('/usr/bin/openssl', 'ca', '-gencrl', '-keyfile', "$ENV{top_srcdir}raddb/certs/rsa/ca.key", '-cert', "$ENV{top_srcdir}raddb/certs/rsa/ca.pem", '-config', "$ENV{OUTPUT_DIR}/ca%{clientno}.cnf", '-out', "$ENV{OUTPUT_DIR}/ca-crl.pem", '-key', 'whatever')
	%exec('/usr/bin/openssl', 'crl', '-in', "$ENV{OUTPUT_DIR}/ca-crl.pem", '-outform', 'DER', '-out', "$ENV{OUTPUT_DIR}/ca.crl")
}

#
#  Read cert serial
#
#  Get the serial from the cert and then prepend with
#   - der tag 02
#   - the length (in bytes)
#
read_cert_serial {
	serial := %exec('/usr/bin/openssl', 'x509', '-in', "$ENV{OUTPUT_DIR}/client%{clientno}.crt", '-serial', '-noout')
	serial := %substr(serial, 7)
	len = %length(serial) / 2
	serial := '02' + %hex(len) + serial
}


