#
#  PRE:
#
&Tmp-String-0 := 'testkey'

#
# 0.  Basic store and retrieve
#
&control.Tmp-String-1 := 'cache me'

cache
if (!ok) {
	test_fail
}

# 1. Check the module didn't perform a merge
if (&Tmp-String-1) {
	test_fail
}

# 2. Check status-only works correctly (should return ok and consume attribute)
&control.Cache-Status-Only := 'yes'

cache
if (!ok) {
	test_fail
}

# 3.
if (&control.Cache-Status-Only) {
	test_fail
}

# 4. Retrieve the entry (should be copied to request list)
cache
if (!updated) {
	test_fail
}

# 5.
if (&Tmp-String-1 != &control.Tmp-String-1) {
	test_fail
}

# 6. Retrieving the entry should not expire it
&request -= &Tmp-String-1[*]

cache
if (!updated) {
	test_fail
}

# 7.
if (&Tmp-String-1 != &control.Tmp-String-1) {
	test_fail
}
else {
	test_pass
}

# 8. Force expiry of the entry
&control.Cache-Allow-Merge := no
&control.Cache-Allow-Insert := no
&control.Cache-TTL := 0

cache
if (!ok) {
	test_fail
}

# 9. Check status-only works correctly (should return notfound and consume attribute)
&control.Cache-Status-Only := 'yes'

cache
if (!notfound) {
	test_fail
}

# 10.
if (&control.Cache-Status-Only) {
	test_fail
}

# 11. Check merge-only works correctly (should return notfound and consume attribute)
&control.Cache-Allow-Merge := 'yes'
&control.Cache-Allow-Insert := 'no'

cache
if (!notfound) {
	test_fail
}

# 12.
if (&control.Cache-Allow-Merge) {
	test_fail
}

# 13. ...and check the entry wasn't recreated
&control.Cache-Status-Only := 'yes'

cache
if (!notfound) {
	test_fail
}

# 14. This should still allow the creation of a new entry
&control.Cache-TTL := -1

cache
if (!ok) {
	test_fail
}

# 15.
cache
if (!updated) {
	test_fail
}

# 16.
if (&control.Cache-TTL) {
	test_fail
}

# 17.
if (&Tmp-String-1 != &control.Tmp-String-1) {
	test_fail
}

&control.Tmp-String-1 := 'cache me2'

# 18. Updating the Cache-TTL shouldn't make things go boom (we can't really check if it works)
&control.Cache-TTL := 30

cache
if (!updated) {
	test_fail
}

# 19. Request Tmp-String-1 shouldn't have been updated yet
if (&Tmp-String-1 == &control.Tmp-String-1) {
	test_fail
}

# 20. Check that a new entry is created
&control.Cache-TTL := -1

cache
if (!updated) {
	test_fail
}

# 21. Request Tmp-String-1 still shouldn't have been updated yet
if (&Tmp-String-1 == &control.Tmp-String-1) {
	test_fail
}

# 22.
cache
if (!updated) {
	test_fail
}

# 23. Request Tmp-String-1 should now have been updated
if (&Tmp-String-1 != &control.Tmp-String-1) {
	test_fail
}

# 24. Check Cache-Merge = yes works as expected (should update current request)
&control.Tmp-String-1 := 'cache me3'
&control.Cache-TTL := -1
&control.Cache-Merge-New := yes

cache
if (!updated) {
	test_fail
}

# 25. Request Tmp-String-1 should now have been updated
if (&Tmp-String-1 != &control.Tmp-String-1) {
	test_fail
}

# 26. Check Cache-Entry-Hits is updated as we expect
if (&Cache-Entry-Hits != 0) {
	test_fail
}

cache
if (&Cache-Entry-Hits != 1) {
	test_fail
}

test_pass
